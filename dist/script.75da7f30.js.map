{"version":3,"sources":["node_modules/chessboardjs/www/js/chessboard.js","chess.js","script.js"],"names":["Chess","fen","BLACK","WHITE","EMPTY","PAWN","KNIGHT","BISHOP","ROOK","QUEEN","KING","SYMBOLS","DEFAULT_POSITION","POSSIBLE_RESULTS","PAWN_OFFSETS","b","w","PIECE_OFFSETS","n","r","q","k","ATTACKS","RAYS","SHIFTS","p","FLAGS","NORMAL","CAPTURE","BIG_PAWN","EP_CAPTURE","PROMOTION","KSIDE_CASTLE","QSIDE_CASTLE","BITS","RANK_1","RANK_2","RANK_3","RANK_4","RANK_5","RANK_6","RANK_7","RANK_8","SQUARES","a8","b8","c8","d8","e8","f8","g8","h8","a7","b7","c7","d7","e7","f7","g7","h7","a6","b6","c6","d6","e6","f6","g6","h6","a5","b5","c5","d5","e5","f5","g5","h5","a4","b4","c4","d4","e4","f4","g4","h4","a3","b3","c3","d3","e3","f3","g3","h3","a2","b2","c2","d2","e2","f2","g2","h2","a1","b1","c1","d1","e1","f1","g1","h1","ROOKS","square","flag","board","Array","kings","turn","castling","ep_square","half_moves","move_number","history","header","comments","load","clear","keep_headers","update_setup","generate_fen","prune_comments","reversed_history","current_comments","copy_comment","length","push","undo_move","make_move","pop","reset","tokens","split","position","validate_fen","valid","i","piece","charAt","is_digit","parseInt","color","put","type","toLowerCase","algebraic","indexOf","errors","error_number","error","isNaN","test","rows","sum_fields","previous_was_number","empty","toUpperCase","cflags","epflags","join","set_header","args","get","sq","remove","build_move","from","to","flags","promotion","move","captured","generate_moves","options","add_move","moves","rank","pieces","len","us","them","swap_color","second_rank","first_sq","last_sq","single_square","legal","j","offset","castling_from","castling_to","attacked","legal_moves","king_attacked","move_to_san","sloppy","output","disambiguator","get_disambiguator","in_check","in_checkmate","stripped_san","replace","difference","index","blocked","in_stalemate","insufficient_material","bishops","num_pieces","sq_color","sum","in_threefold_repetition","positions","repetition","slice","old","ambiguities","same_rank","same_file","ambig_from","ambig_to","ambig_piece","file","ascii","s","symbol","move_from_san","clean_move","matches","match","f","substring","c","make_pretty","ugly_move","clone","san","obj","dupe","property","trim","str","perft","depth","nodes","child_nodes","keys","ugly_moves","verbose","in_draw","game_over","row","pgn","newline","newline_char","max_width","result","header_exists","append_comment","move_string","comment","delimiter","Result","strip","wrap_comment","width","token","current_width","includes","load_pgn","mask","has_keys","object","key","parse_pgn_header","header_obj","headers","RegExp","value","header_regex","header_string","exec","to_hex","string","map","charCodeAt","toString","encodeURIComponent","from_hex","decodeURIComponent","encode_comment","decode_comment","startsWith","endsWith","ms","bracket","semicolon","undefined","rav_regex","half_move","arguments","setTurn","t","move_obj","pretty_move","undo","square_color","sq_0x88","move_history","get_comment","set_comment","delete_comment","get_comments","Object","delete_comments","exports","define","console","log","draggable","onDragStart","onDrop","onSnapEnd","pieceTheme","flip","start","game","worker","Worker","isWhite","thinking","document","querySelector","scorecard","statusDisplay","moveNumber","newdiv","createElement","id","append","moveString","getElementById","addEventListener","downloadPGN","element","setAttribute","Date","now","style","display","body","appendChild","click","removeChild","source","orientation","search","target","innerHTML","updateStatus","status","moveColor","postMessage","onmessage","e","nextMove","JSON","parse","data"],"mappings":"AAAA;AACA;AACA,AEFA;AFGA;AACA,AEHA;AFIA;AACA;AACA;AACA,AELAoU,OAAO,CAACC,GAAR;ADHA,ADSA,AEKA,IAAMtN,KAAK,GAAG,2BAAW,QAAX,EAAqB;ADbnC,ADSA,AEKEuN,EAAAA,SAAS,EAAE,IADsB;ADZnC,ADSA,AEKE3L,EAAAA,QAAQ,EAAE,OAFuB;ADXnC,ADSA,AEKE4L,EAAAA,WAAW,EAAEA,WAHoB;ADVnC,ADSA,AEKEC,EAAAA,MAAM,EAAEA,MAJyB;ADTnC,ADSA,AEKEC,EAAAA,SAAS,EAAEA,SALsB;ADRnC,ADSA,AEKEC,EAAAA,UAAU,EAAE;ADbd,ADSA,AEFmC,CAArB,CAAd;ADNA,ADSA,AEKA3N,KAAK,CAAC4N,IAAN;ADbA,ADSA,AEKA5N,KAAK,CAAC6N,KAAN;ADbA,ADSA,AEKA,IAAMC,IAAI,GAAG,IAAI7U,YAAJ,EAAb;ADbA,ADSA,AEKA,IAAM8U,MAAM,GAAG,IAAIC,MAAJ,CAAW,sCAAX,CAAf;ADbA,ADSA,AEKA,IAAIC,OAAO,GAAG,IAAd;ADbA,ADSA,AEKA,IAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAjB;ADbA,ADSA,AEKA,IAAMC,SAAS,GAAGF,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAlB;ADbA,ADSA,AEKA,IAAME,aAAa,GAAGH,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAtB;ADbA,ADSA,AEKA,IAAIG,UAAU,GAAG,CAAjB;ADbA,ADSA,AEKA,IAAIC,MAAM,GAAGL,QAAQ,CAACM,aAAT,CAAuB,KAAvB,CAAb;ADbA,ADSA,AEKAD,MAAM,CAACE,EAAP,GAAY,QAAZ;ADbA,ADSA,AEKAL,SAAS,CAACM,MAAV,CAAiBH,MAAjB;ADbA,ADSA,AEKA,IAAII,UAAU,GAAGL,UAAU,GAAG,IAA9B;ADbA,ADSA,AEKAT,IAAI,CAACrN,MAAL,CAAY,OAAZ,EAAqB,WAArB,EAAkC,OAAlC,EAA2C,QAA3C;ADbA,ADSA,AEKA0N,QAAQ,CAACU,cAAT,CAAwB,cAAxB,EAAwCC,gBAAxC,CAAyD,OAAzD,EAAkEC,WAAlE;ADbA,ADSA;ACRA,ADSA,AEKA,SAASA,WAAT,GAAuB;ADbvB,ADSA,AEKE,MAAIC,OAAO,GAAGb,QAAQ,CAACM,aAAT,CAAuB,GAAvB,CAAd;ADZF,ADQA,AEKEO,EAAAA,EDbE/V,KAAK,ACaA,CAACgW,EDbE,SAARhW,CCaF,CAAqB,GDbX,CAASC,ECanB,CDbU,CCamB,CDbL,kCCawCqS,kBAAkB,CAACuC,IAAI,CAAC1E,GAAL,EAAD,CAAlF;ADZE,ADQJ,AEKE4F,EAAAA,IDbM7V,GCaC,CAAC8V,CDbG,GAAG,GAAZ,KCaF,CAAqB,UAArB,EAAiC,oBAAkBC,IAAI,CAACC,GAAL,EAAlB,GAA6B,MAA9D;ADZE,ADQJ,AEMEH,EAAAA,IDdM5V,GCcC,CAACgW,CDdG,GAAG,CCcd,CAAcC,CDdZ,MCcF,GAAwB,MAAxB;ADZE,ADOJ,AEMElB,EAAAA,IDbM9U,ICaE,CDbG,ACaFiW,GDbK,CAAC,ACaf,CDbE,ACaYC,WAAd,CAA0BP,OAA1B;ADXE,ADMJ,AEOEA,EAAAA,IDbM1V,GCaC,CDbG,ACaFkW,GDbK,ECab,CDbE;AACA,ADMJ,AEQErB,EAAAA,IDdM5U,ICcE,CAAC+V,CDdG,GAAG,ACcf,CAAcG,EDdZ,SCcF,CAA0BT,OAA1B;ADbE,ADMJ,AEQC,MDdOxV,MAAM,GAAG,GAAb;AACA,ADMJ,MCNQC,IAAI,GAAG,GAAX;AACA,ADMJ,AEQA,MDdQC,GCcC8T,EDdI,GAAG,GAAZ,GCcJ,CAAqBkC,MAArB,EAA6B1N,KAA7B,EAAoCJ,QAApC,EAA8C+N,WAA9C,EAA2D;ADbvD,ADMJ,AEQE,MDdMhW,ACcHsU,IDdO,GAAG,ACcb,EAAY,CDdV;AAEA,ADKJ,AEOe,MDZPrU,KCYc,EDZP,GAAG,ACYH,cDZX;AAEA,ADIJ,AEM6B,MDVrBC,gBAAgB,GAClB,0DADF;AAGA,ADEJ,MCFQC,gBAAgB,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,SAAf,EAA0B,GAA1B,CAAvB;AAEA,ADCJ,AEKE,MDNMC,ACMF+T,IAAI,CAAC5E,ODNS,ECMd,CDNiB,CCMrB,EAAsB,OAAO,KAAP;ADLlBlP,ADCN,ICDMA,CAAC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AvB,CAAT;ADqB+CnU,AD7BjD,AESEkU,EAAAA,EDoB+ClU,CAAC,EAAE,CCpB5C,CAACoU,EAAP,GAAY,UAAQH,UAApB;ADoBe,AD5BjB,AESEF,EAAAA,CDmBE,QCnBO,CAACM,MAAV,CAAiBH,MAAjB;ADqBE,AD7BJ,AESEuB,EAAAA,IDoBMpV,KAAK,GAAG,ACpBF,CAACsJ,IAAD,CAAZ;ADqBIrJ,AD7BN,AEUC,IDmBKA,MAAM,EAAE,GADE;AAEVC,AD7BN,IC6BMA,OAAO,EAAE,GAFC;AAGVC,AD7BN,AESA,IDoBMA,KCpBGiV,GDoBK,EAAE,GAHA,ICjBhB,CAAsB9L,IAAtB,EAA4B;ADqBtBlJ,AD7BN,AESE,IDoBIA,ECpBAiV,MAAM,EDoBI,CCpBD,CDoBG,CCpBhB,EDgBc;AAKVhV,AD7BN,AEUE,IDmBIA,ECnBAiV,ODmBS,EAAE,ACnBF,GDcC,ACdE,OAAhB;ADoBIhV,AD7BN,IC6BMA,YAAY,EAAE,GANJ;AAOVC,AD7BN,AESE,IDoBIA,ECpBA4S,IAAI,CAAC3N,IAAL,CDoBY,EAAE,ICpBE,GAApB,EAAyB;ADaX,ADrBhB,AESI8P,GDYA,CCZAA,SAAS,GAAG,OAAZ;ADsBA,AD9BJ,AESG,MDqBK9U,IAAI,GAAG;AACTP,AD9BN,IC8BMA,MAAM,EAAE,CADC;AAETC,AD9BN,AESE,IDqBIA,ECrBAiT,IAAI,CDqBG,ACrBF/H,EDqBI,CAFA,SCnBT,EAAJ,EAAyB;ADsBrBjL,AD9BN,AESIkV,IDqBElV,ACrBFkV,MAAM,EDqBI,CCrBDC,CDqBG,CAHD,OClBO,GAAG,iBAArB;ADsBElV,AD9BN,AESG,GAFD,CDuBIA,KCnBC,IAAI+S,CDmBK,EAAE,CAJH,ACfA,CAAC7E,OAAL,EAAJ,EAAoB;ADoBrBjO,AD9BN,AEWIgV,IDmBEhV,ACnBFgV,MAAM,GDmBK,ACnBF,EDmBI,EALF,uBCdX;ADoBE/U,AD9BN,AEWG,GAFI,CDqBDA,KCjBC,ODiBW,EAAE,EANL;AAOTC,AD9BN,AEaI8U,IDiBE9U,ACjBF8U,MAAM,GAAGC,GDiBK,EAAE,ICjBE,GAAG,UAArB;ADUW,ADtBf,GCs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","file":"script.75da7f30.js","sourceRoot":"..","sourcesContent":["/*!\r\n * chessboard.js $version$\r\n *\r\n * Copyright 2013 Chris Oakman\r\n * Released under the MIT license\r\n * https://github.com/oakmac/chessboardjs/blob/master/LICENSE\r\n *\r\n * Date: $date$\r\n */\r\n\r\n//------------------------------------------------------------------------------\r\n// Chess Util Functions\r\n//------------------------------------------------------------------------------\r\nvar COLUMNS = 'abcdefgh'.split('');\r\n\r\nfunction validMove(move) {\r\n  // move should be a string\r\n  if (typeof move !== 'string') return false;\r\n\r\n  // move should be in the form of \"e2-e4\", \"f6-d5\"\r\n  var tmp = move.split('-');\r\n  if (tmp.length !== 2) return false;\r\n\r\n  return (validSquare(tmp[0]) === true && validSquare(tmp[1]) === true);\r\n}\r\n\r\nfunction validSquare(square) {\r\n  if (typeof square !== 'string') return false;\r\n  return (square.search(/^[a-h][1-8]$/) !== -1);\r\n}\r\n\r\nfunction validPieceCode(code) {\r\n  if (typeof code !== 'string') return false;\r\n  return (code.search(/^[bw][KQRNBP]$/) !== -1);\r\n}\r\n\r\n// TODO: this whole function could probably be replaced with a single regex\r\nfunction validFen(fen) {\r\n  if (typeof fen !== 'string') return false;\r\n\r\n  // cut off any move, castling, etc info from the end\r\n  // we're only interested in position information\r\n  fen = fen.replace(/ .+$/, '');\r\n\r\n  // FEN should be 8 sections separated by slashes\r\n  var chunks = fen.split('/');\r\n  if (chunks.length !== 8) return false;\r\n\r\n  // check the piece sections\r\n  for (var i = 0; i < 8; i++) {\r\n    if (chunks[i] === '' ||\r\n        chunks[i].length > 8 ||\r\n        chunks[i].search(/[^kqrbnpKQRNBP1-8]/) !== -1) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction validPositionObject(pos) {\r\n  if (typeof pos !== 'object') return false;\r\n\r\n  for (var i in pos) {\r\n    if (pos.hasOwnProperty(i) !== true) continue;\r\n\r\n    if (validSquare(i) !== true || validPieceCode(pos[i]) !== true) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// convert FEN piece code to bP, wK, etc\r\nfunction fenToPieceCode(piece) {\r\n  // black piece\r\n  if (piece.toLowerCase() === piece) {\r\n    return 'b' + piece.toUpperCase();\r\n  }\r\n\r\n  // white piece\r\n  return 'w' + piece.toUpperCase();\r\n}\r\n\r\n// convert bP, wK, etc code to FEN structure\r\nfunction pieceCodeToFen(piece) {\r\n  var tmp = piece.split('');\r\n\r\n  // white piece\r\n  if (tmp[0] === 'w') {\r\n    return tmp[1].toUpperCase();\r\n  }\r\n\r\n  // black piece\r\n  return tmp[1].toLowerCase();\r\n}\r\n\r\n// convert FEN string to position object\r\n// returns false if the FEN string is invalid\r\nfunction fenToObj(fen) {\r\n  if (validFen(fen) !== true) {\r\n    return false;\r\n  }\r\n\r\n  // cut off any move, castling, etc info from the end\r\n  // we're only interested in position information\r\n  fen = fen.replace(/ .+$/, '');\r\n\r\n  var rows = fen.split('/');\r\n  var position = {};\r\n\r\n  var currentRow = 8;\r\n  for (var i = 0; i < 8; i++) {\r\n    var row = rows[i].split('');\r\n    var colIndex = 0;\r\n\r\n    // loop through each character in the FEN section\r\n    for (var j = 0; j < row.length; j++) {\r\n      // number / empty squares\r\n      if (row[j].search(/[1-8]/) !== -1) {\r\n        var emptySquares = parseInt(row[j], 10);\r\n        colIndex += emptySquares;\r\n      }\r\n      // piece\r\n      else {\r\n        var square = COLUMNS[colIndex] + currentRow;\r\n        position[square] = fenToPieceCode(row[j]);\r\n        colIndex++;\r\n      }\r\n    }\r\n\r\n    currentRow--;\r\n  }\r\n\r\n  return position;\r\n}\r\n\r\n// position object to FEN string\r\n// returns false if the obj is not a valid position object\r\nfunction objToFen(obj) {\r\n  if (validPositionObject(obj) !== true) {\r\n    return false;\r\n  }\r\n\r\n  var fen = '';\r\n\r\n  var currentRow = 8;\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      var square = COLUMNS[j] + currentRow;\r\n\r\n      // piece exists\r\n      if (obj.hasOwnProperty(square) === true) {\r\n        fen += pieceCodeToFen(obj[square]);\r\n      }\r\n\r\n      // empty space\r\n      else {\r\n        fen += '1';\r\n      }\r\n    }\r\n\r\n    if (i !== 7) {\r\n      fen += '/';\r\n    }\r\n\r\n    currentRow--;\r\n  }\r\n\r\n  // squeeze the numbers together\r\n  // haha, I love this solution...\r\n  fen = fen.replace(/11111111/g, '8');\r\n  fen = fen.replace(/1111111/g, '7');\r\n  fen = fen.replace(/111111/g, '6');\r\n  fen = fen.replace(/11111/g, '5');\r\n  fen = fen.replace(/1111/g, '4');\r\n  fen = fen.replace(/111/g, '3');\r\n  fen = fen.replace(/11/g, '2');\r\n\r\n  return fen;\r\n}\r\n\r\nvar ChessBoard = function (containerElOrId, cfg) {\r\n\r\ncfg = cfg || {};\r\n\r\n//------------------------------------------------------------------------------\r\n// Constants\r\n//------------------------------------------------------------------------------\r\n\r\nvar MINIMUM_JQUERY_VERSION = '1.7.0',\r\n  START_FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR',\r\n  START_POSITION = fenToObj(START_FEN);\r\n\r\n// use unique class names to prevent clashing with anything else on the page\r\n// and simplify selectors\r\n// NOTE: these should never change\r\nvar CSS = {\r\n  alpha: 'alpha-d2270',\r\n  black: 'black-3c85d',\r\n  board: 'board-b72b1',\r\n  chessboard: 'chessboard-63f37',\r\n  clearfix: 'clearfix-7da63',\r\n  highlight1: 'highlight1-32417',\r\n  highlight2: 'highlight2-9c5d2',\r\n  notation: 'notation-322f9',\r\n  numeric: 'numeric-fc462',\r\n  piece: 'piece-417db',\r\n  row: 'row-5277c',\r\n  sparePieces: 'spare-pieces-7492f',\r\n  sparePiecesBottom: 'spare-pieces-bottom-ae20f',\r\n  sparePiecesTop: 'spare-pieces-top-4028b',\r\n  square: 'square-55d63',\r\n  white: 'white-1e1d7'\r\n};\r\n\r\n//------------------------------------------------------------------------------\r\n// Module Scope Variables\r\n//------------------------------------------------------------------------------\r\n\r\n// DOM elements\r\nvar containerEl,\r\n  boardEl,\r\n  draggedPieceEl,\r\n  sparePiecesTopEl,\r\n  sparePiecesBottomEl;\r\n\r\n// constructor return object\r\nvar widget = {};\r\n\r\n//------------------------------------------------------------------------------\r\n// Stateful\r\n//------------------------------------------------------------------------------\r\n\r\nvar ANIMATION_HAPPENING = false,\r\n  BOARD_BORDER_SIZE = 2,\r\n  CURRENT_ORIENTATION = 'white',\r\n  CURRENT_POSITION = {},\r\n  SQUARE_SIZE,\r\n  DRAGGED_PIECE,\r\n  DRAGGED_PIECE_LOCATION,\r\n  DRAGGED_PIECE_SOURCE,\r\n  DRAGGING_A_PIECE = false,\r\n  SPARE_PIECE_ELS_IDS = {},\r\n  SQUARE_ELS_IDS = {},\r\n  SQUARE_ELS_OFFSETS;\r\n\r\n//------------------------------------------------------------------------------\r\n// JS Util Functions\r\n//------------------------------------------------------------------------------\r\n\r\n// http://tinyurl.com/3ttloxj\r\nfunction uuid() {\r\n  return 'xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx'.replace(/x/g, function(c) {\r\n    var r = Math.random() * 16 | 0;\r\n    return r.toString(16);\r\n  });\r\n}\r\n\r\nfunction deepCopy(thing) {\r\n  return JSON.parse(JSON.stringify(thing));\r\n}\r\n\r\nfunction parseSemVer(version) {\r\n  var tmp = version.split('.');\r\n  return {\r\n    major: parseInt(tmp[0], 10),\r\n    minor: parseInt(tmp[1], 10),\r\n    patch: parseInt(tmp[2], 10)\r\n  };\r\n}\r\n\r\n// returns true if version is >= minimum\r\nfunction compareSemVer(version, minimum) {\r\n  version = parseSemVer(version);\r\n  minimum = parseSemVer(minimum);\r\n\r\n  var versionNum = (version.major * 10000 * 10000) +\r\n    (version.minor * 10000) + version.patch;\r\n  var minimumNum = (minimum.major * 10000 * 10000) +\r\n    (minimum.minor * 10000) + minimum.patch;\r\n\r\n  return (versionNum >= minimumNum);\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Validation / Errors\r\n//------------------------------------------------------------------------------\r\n\r\nfunction error(code, msg, obj) {\r\n  // do nothing if showErrors is not set\r\n  if (cfg.hasOwnProperty('showErrors') !== true ||\r\n      cfg.showErrors === false) {\r\n    return;\r\n  }\r\n\r\n  var errorText = 'ChessBoard Error ' + code + ': ' + msg;\r\n\r\n  // print to console\r\n  if (cfg.showErrors === 'console' &&\r\n      typeof console === 'object' &&\r\n      typeof console.log === 'function') {\r\n    console.log(errorText);\r\n    if (arguments.length >= 2) {\r\n      console.log(obj);\r\n    }\r\n    return;\r\n  }\r\n\r\n  // alert errors\r\n  if (cfg.showErrors === 'alert') {\r\n    if (obj) {\r\n      errorText += '\\n\\n' + JSON.stringify(obj);\r\n    }\r\n    window.alert(errorText);\r\n    return;\r\n  }\r\n\r\n  // custom function\r\n  if (typeof cfg.showErrors === 'function') {\r\n    cfg.showErrors(code, msg, obj);\r\n  }\r\n}\r\n\r\n// check dependencies\r\nfunction checkDeps() {\r\n  // if containerId is a string, it must be the ID of a DOM node\r\n  if (typeof containerElOrId === 'string') {\r\n    // cannot be empty\r\n    if (containerElOrId === '') {\r\n      window.alert('ChessBoard Error 1001: ' +\r\n        'The first argument to ChessBoard() cannot be an empty string.' +\r\n        '\\n\\nExiting...');\r\n      return false;\r\n    }\r\n\r\n    // make sure the container element exists in the DOM\r\n    var el = document.getElementById(containerElOrId);\r\n    if (! el) {\r\n      window.alert('ChessBoard Error 1002: Element with id \"' +\r\n        containerElOrId + '\" does not exist in the DOM.' +\r\n        '\\n\\nExiting...');\r\n      return false;\r\n    }\r\n\r\n    // set the containerEl\r\n    containerEl = $(el);\r\n  }\r\n\r\n  // else it must be something that becomes a jQuery collection\r\n  // with size 1\r\n  // ie: a single DOM node or jQuery object\r\n  else {\r\n    containerEl = $(containerElOrId);\r\n\r\n    if (containerEl.length !== 1) {\r\n      window.alert('ChessBoard Error 1003: The first argument to ' +\r\n        'ChessBoard() must be an ID or a single DOM node.' +\r\n        '\\n\\nExiting...');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // JSON must exist\r\n  if (! window.JSON ||\r\n      typeof JSON.stringify !== 'function' ||\r\n      typeof JSON.parse !== 'function') {\r\n    window.alert('ChessBoard Error 1004: JSON does not exist. ' +\r\n      'Please include a JSON polyfill.\\n\\nExiting...');\r\n    return false;\r\n  }\r\n\r\n  // check for a compatible version of jQuery\r\n  if (! (typeof window.$ && $.fn && $.fn.jquery &&\r\n      compareSemVer($.fn.jquery, MINIMUM_JQUERY_VERSION) === true)) {\r\n    window.alert('ChessBoard Error 1005: Unable to find a valid version ' +\r\n      'of jQuery. Please include jQuery ' + MINIMUM_JQUERY_VERSION + ' or ' +\r\n      'higher on the page.\\n\\nExiting...');\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction validAnimationSpeed(speed) {\r\n  if (speed === 'fast' || speed === 'slow') {\r\n    return true;\r\n  }\r\n\r\n  if ((parseInt(speed, 10) + '') !== (speed + '')) {\r\n    return false;\r\n  }\r\n\r\n  return (speed >= 0);\r\n}\r\n\r\n// validate config / set default options\r\nfunction expandConfig() {\r\n  if (typeof cfg === 'string' || validPositionObject(cfg) === true) {\r\n    cfg = {\r\n      position: cfg\r\n    };\r\n  }\r\n\r\n  // default for orientation is white\r\n  if (cfg.orientation !== 'black') {\r\n    cfg.orientation = 'white';\r\n  }\r\n  CURRENT_ORIENTATION = cfg.orientation;\r\n\r\n  // default for showNotation is true\r\n  if (cfg.showNotation !== false) {\r\n    cfg.showNotation = true;\r\n  }\r\n\r\n  // default for draggable is false\r\n  if (cfg.draggable !== true) {\r\n    cfg.draggable = false;\r\n  }\r\n\r\n  // default for dropOffBoard is 'snapback'\r\n  if (cfg.dropOffBoard !== 'trash') {\r\n    cfg.dropOffBoard = 'snapback';\r\n  }\r\n\r\n  // default for sparePieces is false\r\n  if (cfg.sparePieces !== true) {\r\n    cfg.sparePieces = false;\r\n  }\r\n\r\n  // draggable must be true if sparePieces is enabled\r\n  if (cfg.sparePieces === true) {\r\n    cfg.draggable = true;\r\n  }\r\n\r\n  // default piece theme is wikipedia\r\n  if (cfg.hasOwnProperty('pieceTheme') !== true ||\r\n      (typeof cfg.pieceTheme !== 'string' &&\r\n       typeof cfg.pieceTheme !== 'function')) {\r\n    cfg.pieceTheme = 'img/chesspieces/wikipedia/{piece}.png';\r\n  }\r\n\r\n  // animation speeds\r\n  if (cfg.hasOwnProperty('appearSpeed') !== true ||\r\n      validAnimationSpeed(cfg.appearSpeed) !== true) {\r\n    cfg.appearSpeed = 200;\r\n  }\r\n  if (cfg.hasOwnProperty('moveSpeed') !== true ||\r\n      validAnimationSpeed(cfg.moveSpeed) !== true) {\r\n    cfg.moveSpeed = 200;\r\n  }\r\n  if (cfg.hasOwnProperty('snapbackSpeed') !== true ||\r\n      validAnimationSpeed(cfg.snapbackSpeed) !== true) {\r\n    cfg.snapbackSpeed = 50;\r\n  }\r\n  if (cfg.hasOwnProperty('snapSpeed') !== true ||\r\n      validAnimationSpeed(cfg.snapSpeed) !== true) {\r\n    cfg.snapSpeed = 25;\r\n  }\r\n  if (cfg.hasOwnProperty('trashSpeed') !== true ||\r\n      validAnimationSpeed(cfg.trashSpeed) !== true) {\r\n    cfg.trashSpeed = 100;\r\n  }\r\n\r\n  // make sure position is valid\r\n  if (cfg.hasOwnProperty('position') === true) {\r\n    if (cfg.position === 'start') {\r\n      CURRENT_POSITION = deepCopy(START_POSITION);\r\n    }\r\n\r\n    else if (validFen(cfg.position) === true) {\r\n      CURRENT_POSITION = fenToObj(cfg.position);\r\n    }\r\n\r\n    else if (validPositionObject(cfg.position) === true) {\r\n      CURRENT_POSITION = deepCopy(cfg.position);\r\n    }\r\n\r\n    else {\r\n      error(7263, 'Invalid value passed to config.position.', cfg.position);\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// DOM Misc\r\n//------------------------------------------------------------------------------\r\n\r\n// calculates square size based on the width of the container\r\n// got a little CSS black magic here, so let me explain:\r\n// get the width of the container element (could be anything), reduce by 1 for\r\n// fudge factor, and then keep reducing until we find an exact mod 8 for\r\n// our square size\r\nfunction calculateSquareSize() {\r\n  var containerWidth = parseInt(containerEl.width(), 10);\r\n\r\n  // defensive, prevent infinite loop\r\n  if (! containerWidth || containerWidth <= 0) {\r\n    return 0;\r\n  }\r\n\r\n  // pad one pixel\r\n  var boardWidth = containerWidth - 1;\r\n\r\n  while (boardWidth % 8 !== 0 && boardWidth > 0) {\r\n    boardWidth--;\r\n  }\r\n\r\n  return (boardWidth / 8);\r\n}\r\n\r\n// create random IDs for elements\r\nfunction createElIds() {\r\n  // squares on the board\r\n  for (var i = 0; i < COLUMNS.length; i++) {\r\n    for (var j = 1; j <= 8; j++) {\r\n      var square = COLUMNS[i] + j;\r\n      SQUARE_ELS_IDS[square] = square + '-' + uuid();\r\n    }\r\n  }\r\n\r\n  // spare pieces\r\n  var pieces = 'KQRBNP'.split('');\r\n  for (var i = 0; i < pieces.length; i++) {\r\n    var whitePiece = 'w' + pieces[i];\r\n    var blackPiece = 'b' + pieces[i];\r\n    SPARE_PIECE_ELS_IDS[whitePiece] = whitePiece + '-' + uuid();\r\n    SPARE_PIECE_ELS_IDS[blackPiece] = blackPiece + '-' + uuid();\r\n  }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Markup Building\r\n//------------------------------------------------------------------------------\r\n\r\nfunction buildBoardContainer() {\r\n  var html = '<div class=\"' + CSS.chessboard + '\">';\r\n\r\n  if (cfg.sparePieces === true) {\r\n    html += '<div class=\"' + CSS.sparePieces + ' ' +\r\n      CSS.sparePiecesTop + '\"></div>';\r\n  }\r\n\r\n  html += '<div class=\"' + CSS.board + '\"></div>';\r\n\r\n  if (cfg.sparePieces === true) {\r\n    html += '<div class=\"' + CSS.sparePieces + ' ' +\r\n      CSS.sparePiecesBottom + '\"></div>';\r\n  }\r\n\r\n  html += '</div>';\r\n\r\n  return html;\r\n}\r\n\r\n/*\r\nvar buildSquare = function(color, size, id) {\r\n  var html = '<div class=\"' + CSS.square + ' ' + CSS[color] + '\" ' +\r\n  'style=\"width: ' + size + 'px; height: ' + size + 'px\" ' +\r\n  'id=\"' + id + '\">';\r\n\r\n  if (cfg.showNotation === true) {\r\n\r\n  }\r\n\r\n  html += '</div>';\r\n\r\n  return html;\r\n};\r\n*/\r\n\r\nfunction buildBoard(orientation) {\r\n  if (orientation !== 'black') {\r\n    orientation = 'white';\r\n  }\r\n\r\n  var html = '';\r\n\r\n  // algebraic notation / orientation\r\n  var alpha = deepCopy(COLUMNS);\r\n  var row = 8;\r\n  if (orientation === 'black') {\r\n    alpha.reverse();\r\n    row = 1;\r\n  }\r\n\r\n  var squareColor = 'white';\r\n  for (var i = 0; i < 8; i++) {\r\n    html += '<div class=\"' + CSS.row + '\">';\r\n    for (var j = 0; j < 8; j++) {\r\n      var square = alpha[j] + row;\r\n\r\n      html += '<div class=\"' + CSS.square + ' ' + CSS[squareColor] + ' ' +\r\n        'square-' + square + '\" ' +\r\n        'style=\"width: ' + SQUARE_SIZE + 'px; height: ' + SQUARE_SIZE + 'px\" ' +\r\n        'id=\"' + SQUARE_ELS_IDS[square] + '\" ' +\r\n        'data-square=\"' + square + '\">';\r\n\r\n      if (cfg.showNotation === true) {\r\n        // alpha notation\r\n        if ((orientation === 'white' && row === 1) ||\r\n            (orientation === 'black' && row === 8)) {\r\n          html += '<div class=\"' + CSS.notation + ' ' + CSS.alpha + '\">' +\r\n            alpha[j] + '</div>';\r\n        }\r\n\r\n        // numeric notation\r\n        if (j === 0) {\r\n          html += '<div class=\"' + CSS.notation + ' ' + CSS.numeric + '\">' +\r\n            row + '</div>';\r\n        }\r\n      }\r\n\r\n      html += '</div>'; // end .square\r\n\r\n      squareColor = (squareColor === 'white' ? 'black' : 'white');\r\n    }\r\n    html += '<div class=\"' + CSS.clearfix + '\"></div></div>';\r\n\r\n    squareColor = (squareColor === 'white' ? 'black' : 'white');\r\n\r\n    if (orientation === 'white') {\r\n      row--;\r\n    }\r\n    else {\r\n      row++;\r\n    }\r\n  }\r\n\r\n  return html;\r\n}\r\n\r\nfunction buildPieceImgSrc(piece) {\r\n  if (typeof cfg.pieceTheme === 'function') {\r\n    return cfg.pieceTheme(piece);\r\n  }\r\n\r\n  if (typeof cfg.pieceTheme === 'string') {\r\n    return cfg.pieceTheme.replace(/{piece}/g, piece);\r\n  }\r\n\r\n  // NOTE: this should never happen\r\n  error(8272, 'Unable to build image source for cfg.pieceTheme.');\r\n  return '';\r\n}\r\n\r\nfunction buildPiece(piece, hidden, id) {\r\n  var html = '<img src=\"' + buildPieceImgSrc(piece) + '\" ';\r\n  if (id && typeof id === 'string') {\r\n    html += 'id=\"' + id + '\" ';\r\n  }\r\n  html += 'alt=\"\" ' +\r\n  'class=\"' + CSS.piece + '\" ' +\r\n  'data-piece=\"' + piece + '\" ' +\r\n  'style=\"width: ' + SQUARE_SIZE + 'px;' +\r\n  'height: ' + SQUARE_SIZE + 'px;';\r\n  if (hidden === true) {\r\n    html += 'display:none;';\r\n  }\r\n  html += '\" />';\r\n\r\n  return html;\r\n}\r\n\r\nfunction buildSparePieces(color) {\r\n  var pieces = ['wK', 'wQ', 'wR', 'wB', 'wN', 'wP'];\r\n  if (color === 'black') {\r\n    pieces = ['bK', 'bQ', 'bR', 'bB', 'bN', 'bP'];\r\n  }\r\n\r\n  var html = '';\r\n  for (var i = 0; i < pieces.length; i++) {\r\n    html += buildPiece(pieces[i], false, SPARE_PIECE_ELS_IDS[pieces[i]]);\r\n  }\r\n\r\n  return html;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Animations\r\n//------------------------------------------------------------------------------\r\n\r\nfunction animateSquareToSquare(src, dest, piece, completeFn) {\r\n  // get information about the source and destination squares\r\n  var srcSquareEl = $('#' + SQUARE_ELS_IDS[src]);\r\n  var srcSquarePosition = srcSquareEl.offset();\r\n  var destSquareEl = $('#' + SQUARE_ELS_IDS[dest]);\r\n  var destSquarePosition = destSquareEl.offset();\r\n\r\n  // create the animated piece and absolutely position it\r\n  // over the source square\r\n  var animatedPieceId = uuid();\r\n  $('body').append(buildPiece(piece, true, animatedPieceId));\r\n  var animatedPieceEl = $('#' + animatedPieceId);\r\n  animatedPieceEl.css({\r\n    display: '',\r\n    position: 'absolute',\r\n    top: srcSquarePosition.top,\r\n    left: srcSquarePosition.left\r\n  });\r\n\r\n  // remove original piece from source square\r\n  srcSquareEl.find('.' + CSS.piece).remove();\r\n\r\n  // on complete\r\n  var complete = function() {\r\n    // add the \"real\" piece to the destination square\r\n    destSquareEl.append(buildPiece(piece));\r\n\r\n    // remove the animated piece\r\n    animatedPieceEl.remove();\r\n\r\n    // run complete function\r\n    if (typeof completeFn === 'function') {\r\n      completeFn();\r\n    }\r\n  };\r\n\r\n  // animate the piece to the destination square\r\n  var opts = {\r\n    duration: cfg.moveSpeed,\r\n    complete: complete\r\n  };\r\n  animatedPieceEl.animate(destSquarePosition, opts);\r\n}\r\n\r\nfunction animateSparePieceToSquare(piece, dest, completeFn) {\r\n  var srcOffset = $('#' + SPARE_PIECE_ELS_IDS[piece]).offset();\r\n  var destSquareEl = $('#' + SQUARE_ELS_IDS[dest]);\r\n  var destOffset = destSquareEl.offset();\r\n\r\n  // create the animate piece\r\n  var pieceId = uuid();\r\n  $('body').append(buildPiece(piece, true, pieceId));\r\n  var animatedPieceEl = $('#' + pieceId);\r\n  animatedPieceEl.css({\r\n    display: '',\r\n    position: 'absolute',\r\n    left: srcOffset.left,\r\n    top: srcOffset.top\r\n  });\r\n\r\n  // on complete\r\n  var complete = function() {\r\n    // add the \"real\" piece to the destination square\r\n    destSquareEl.find('.' + CSS.piece).remove();\r\n    destSquareEl.append(buildPiece(piece));\r\n\r\n    // remove the animated piece\r\n    animatedPieceEl.remove();\r\n\r\n    // run complete function\r\n    if (typeof completeFn === 'function') {\r\n      completeFn();\r\n    }\r\n  };\r\n\r\n  // animate the piece to the destination square\r\n  var opts = {\r\n    duration: cfg.moveSpeed,\r\n    complete: complete\r\n  };\r\n  animatedPieceEl.animate(destOffset, opts);\r\n}\r\n\r\n// execute an array of animations\r\nfunction doAnimations(a, oldPos, newPos) {\r\n  if (a.length === 0) {\r\n    return;\r\n  }\r\n\r\n  ANIMATION_HAPPENING = true;\r\n\r\n  var numFinished = 0;\r\n  function onFinish() {\r\n    numFinished++;\r\n\r\n    // exit if all the animations aren't finished\r\n    if (numFinished !== a.length) return;\r\n\r\n    drawPositionInstant();\r\n    ANIMATION_HAPPENING = false;\r\n\r\n    // run their onMoveEnd function\r\n    if (cfg.hasOwnProperty('onMoveEnd') === true &&\r\n      typeof cfg.onMoveEnd === 'function') {\r\n      cfg.onMoveEnd(deepCopy(oldPos), deepCopy(newPos));\r\n    }\r\n  }\r\n\r\n  for (var i = 0; i < a.length; i++) {\r\n    // clear a piece\r\n    if (a[i].type === 'clear') {\r\n      $('#' + SQUARE_ELS_IDS[a[i].square] + ' .' + CSS.piece)\r\n        .fadeOut(cfg.trashSpeed, onFinish);\r\n    }\r\n\r\n    // add a piece (no spare pieces)\r\n    if (a[i].type === 'add' && cfg.sparePieces !== true) {\r\n      $('#' + SQUARE_ELS_IDS[a[i].square])\r\n        .append(buildPiece(a[i].piece, true))\r\n        .find('.' + CSS.piece)\r\n        .fadeIn(cfg.appearSpeed, onFinish);\r\n    }\r\n\r\n    // add a piece from a spare piece\r\n    if (a[i].type === 'add' && cfg.sparePieces === true) {\r\n      animateSparePieceToSquare(a[i].piece, a[i].square, onFinish);\r\n    }\r\n\r\n    // move a piece\r\n    if (a[i].type === 'move') {\r\n      animateSquareToSquare(a[i].source, a[i].destination, a[i].piece,\r\n        onFinish);\r\n    }\r\n  }\r\n}\r\n\r\n// returns the distance between two squares\r\nfunction squareDistance(s1, s2) {\r\n  s1 = s1.split('');\r\n  var s1x = COLUMNS.indexOf(s1[0]) + 1;\r\n  var s1y = parseInt(s1[1], 10);\r\n\r\n  s2 = s2.split('');\r\n  var s2x = COLUMNS.indexOf(s2[0]) + 1;\r\n  var s2y = parseInt(s2[1], 10);\r\n\r\n  var xDelta = Math.abs(s1x - s2x);\r\n  var yDelta = Math.abs(s1y - s2y);\r\n\r\n  if (xDelta >= yDelta) return xDelta;\r\n  return yDelta;\r\n}\r\n\r\n// returns an array of closest squares from square\r\nfunction createRadius(square) {\r\n  var squares = [];\r\n\r\n  // calculate distance of all squares\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      var s = COLUMNS[i] + (j + 1);\r\n\r\n      // skip the square we're starting from\r\n      if (square === s) continue;\r\n\r\n      squares.push({\r\n        square: s,\r\n        distance: squareDistance(square, s)\r\n      });\r\n    }\r\n  }\r\n\r\n  // sort by distance\r\n  squares.sort(function(a, b) {\r\n    return a.distance - b.distance;\r\n  });\r\n\r\n  // just return the square code\r\n  var squares2 = [];\r\n  for (var i = 0; i < squares.length; i++) {\r\n    squares2.push(squares[i].square);\r\n  }\r\n\r\n  return squares2;\r\n}\r\n\r\n// returns the square of the closest instance of piece\r\n// returns false if no instance of piece is found in position\r\nfunction findClosestPiece(position, piece, square) {\r\n  // create array of closest squares from square\r\n  var closestSquares = createRadius(square);\r\n\r\n  // search through the position in order of distance for the piece\r\n  for (var i = 0; i < closestSquares.length; i++) {\r\n    var s = closestSquares[i];\r\n\r\n    if (position.hasOwnProperty(s) === true && position[s] === piece) {\r\n      return s;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n// calculate an array of animations that need to happen in order to get\r\n// from pos1 to pos2\r\nfunction calculateAnimations(pos1, pos2) {\r\n  // make copies of both\r\n  pos1 = deepCopy(pos1);\r\n  pos2 = deepCopy(pos2);\r\n\r\n  var animations = [];\r\n  var squaresMovedTo = {};\r\n\r\n  // remove pieces that are the same in both positions\r\n  for (var i in pos2) {\r\n    if (pos2.hasOwnProperty(i) !== true) continue;\r\n\r\n    if (pos1.hasOwnProperty(i) === true && pos1[i] === pos2[i]) {\r\n      delete pos1[i];\r\n      delete pos2[i];\r\n    }\r\n  }\r\n\r\n  // find all the \"move\" animations\r\n  for (var i in pos2) {\r\n    if (pos2.hasOwnProperty(i) !== true) continue;\r\n\r\n    var closestPiece = findClosestPiece(pos1, pos2[i], i);\r\n    if (closestPiece !== false) {\r\n      animations.push({\r\n        type: 'move',\r\n        source: closestPiece,\r\n        destination: i,\r\n        piece: pos2[i]\r\n      });\r\n\r\n      delete pos1[closestPiece];\r\n      delete pos2[i];\r\n      squaresMovedTo[i] = true;\r\n    }\r\n  }\r\n\r\n  // add pieces to pos2\r\n  for (var i in pos2) {\r\n    if (pos2.hasOwnProperty(i) !== true) continue;\r\n\r\n    animations.push({\r\n      type: 'add',\r\n      square: i,\r\n      piece: pos2[i]\r\n    })\r\n\r\n    delete pos2[i];\r\n  }\r\n\r\n  // clear pieces from pos1\r\n  for (var i in pos1) {\r\n    if (pos1.hasOwnProperty(i) !== true) continue;\r\n\r\n    // do not clear a piece if it is on a square that is the result\r\n    // of a \"move\", ie: a piece capture\r\n    if (squaresMovedTo.hasOwnProperty(i) === true) continue;\r\n\r\n    animations.push({\r\n      type: 'clear',\r\n      square: i,\r\n      piece: pos1[i]\r\n    });\r\n\r\n    delete pos1[i];\r\n  }\r\n\r\n  return animations;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Control Flow\r\n//------------------------------------------------------------------------------\r\n\r\nfunction drawPositionInstant() {\r\n  // clear the board\r\n  boardEl.find('.' + CSS.piece).remove();\r\n\r\n  // add the pieces\r\n  for (var i in CURRENT_POSITION) {\r\n    if (CURRENT_POSITION.hasOwnProperty(i) !== true) continue;\r\n\r\n    $('#' + SQUARE_ELS_IDS[i]).append(buildPiece(CURRENT_POSITION[i]));\r\n  }\r\n}\r\n\r\nfunction drawBoard() {\r\n  boardEl.html(buildBoard(CURRENT_ORIENTATION));\r\n  drawPositionInstant();\r\n\r\n  if (cfg.sparePieces === true) {\r\n    if (CURRENT_ORIENTATION === 'white') {\r\n      sparePiecesTopEl.html(buildSparePieces('black'));\r\n      sparePiecesBottomEl.html(buildSparePieces('white'));\r\n    }\r\n    else {\r\n      sparePiecesTopEl.html(buildSparePieces('white'));\r\n      sparePiecesBottomEl.html(buildSparePieces('black'));\r\n    }\r\n  }\r\n}\r\n\r\n// given a position and a set of moves, return a new position\r\n// with the moves executed\r\nfunction calculatePositionFromMoves(position, moves) {\r\n  position = deepCopy(position);\r\n\r\n  for (var i in moves) {\r\n    if (moves.hasOwnProperty(i) !== true) continue;\r\n\r\n    // skip the move if the position doesn't have a piece on the source square\r\n    if (position.hasOwnProperty(i) !== true) continue;\r\n\r\n    var piece = position[i];\r\n    delete position[i];\r\n    position[moves[i]] = piece;\r\n  }\r\n\r\n  return position;\r\n}\r\n\r\nfunction setCurrentPosition(position) {\r\n  var oldPos = deepCopy(CURRENT_POSITION);\r\n  var newPos = deepCopy(position);\r\n  var oldFen = objToFen(oldPos);\r\n  var newFen = objToFen(newPos);\r\n\r\n  // do nothing if no change in position\r\n  if (oldFen === newFen) return;\r\n\r\n  // run their onChange function\r\n  if (cfg.hasOwnProperty('onChange') === true &&\r\n    typeof cfg.onChange === 'function') {\r\n    cfg.onChange(oldPos, newPos);\r\n  }\r\n\r\n  // update state\r\n  CURRENT_POSITION = position;\r\n}\r\n\r\nfunction isXYOnSquare(x, y) {\r\n  for (var i in SQUARE_ELS_OFFSETS) {\r\n    if (SQUARE_ELS_OFFSETS.hasOwnProperty(i) !== true) continue;\r\n\r\n    var s = SQUARE_ELS_OFFSETS[i];\r\n    if (x >= s.left && x < s.left + SQUARE_SIZE &&\r\n        y >= s.top && y < s.top + SQUARE_SIZE) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return 'offboard';\r\n}\r\n\r\n// records the XY coords of every square into memory\r\nfunction captureSquareOffsets() {\r\n  SQUARE_ELS_OFFSETS = {};\r\n\r\n  for (var i in SQUARE_ELS_IDS) {\r\n    if (SQUARE_ELS_IDS.hasOwnProperty(i) !== true) continue;\r\n\r\n    SQUARE_ELS_OFFSETS[i] = $('#' + SQUARE_ELS_IDS[i]).offset();\r\n  }\r\n}\r\n\r\nfunction removeSquareHighlights() {\r\n  boardEl.find('.' + CSS.square)\r\n    .removeClass(CSS.highlight1 + ' ' + CSS.highlight2);\r\n}\r\n\r\nfunction snapbackDraggedPiece() {\r\n  // there is no \"snapback\" for spare pieces\r\n  if (DRAGGED_PIECE_SOURCE === 'spare') {\r\n    trashDraggedPiece();\r\n    return;\r\n  }\r\n\r\n  removeSquareHighlights();\r\n\r\n  // animation complete\r\n  function complete() {\r\n    drawPositionInstant();\r\n    draggedPieceEl.css('display', 'none');\r\n\r\n    // run their onSnapbackEnd function\r\n    if (cfg.hasOwnProperty('onSnapbackEnd') === true &&\r\n      typeof cfg.onSnapbackEnd === 'function') {\r\n      cfg.onSnapbackEnd(DRAGGED_PIECE, DRAGGED_PIECE_SOURCE,\r\n        deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION);\r\n    }\r\n  }\r\n\r\n  // get source square position\r\n  var sourceSquarePosition =\r\n    $('#' + SQUARE_ELS_IDS[DRAGGED_PIECE_SOURCE]).offset();\r\n\r\n  // animate the piece to the target square\r\n  var opts = {\r\n    duration: cfg.snapbackSpeed,\r\n    complete: complete\r\n  };\r\n  draggedPieceEl.animate(sourceSquarePosition, opts);\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = false;\r\n}\r\n\r\nfunction trashDraggedPiece() {\r\n  removeSquareHighlights();\r\n\r\n  // remove the source piece\r\n  var newPosition = deepCopy(CURRENT_POSITION);\r\n  delete newPosition[DRAGGED_PIECE_SOURCE];\r\n  setCurrentPosition(newPosition);\r\n\r\n  // redraw the position\r\n  drawPositionInstant();\r\n\r\n  // hide the dragged piece\r\n  draggedPieceEl.fadeOut(cfg.trashSpeed);\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = false;\r\n}\r\n\r\nfunction dropDraggedPieceOnSquare(square) {\r\n  removeSquareHighlights();\r\n\r\n  // update position\r\n  var newPosition = deepCopy(CURRENT_POSITION);\r\n  delete newPosition[DRAGGED_PIECE_SOURCE];\r\n  newPosition[square] = DRAGGED_PIECE;\r\n  setCurrentPosition(newPosition);\r\n\r\n  // get target square information\r\n  var targetSquarePosition = $('#' + SQUARE_ELS_IDS[square]).offset();\r\n\r\n  // animation complete\r\n  var complete = function() {\r\n    drawPositionInstant();\r\n    draggedPieceEl.css('display', 'none');\r\n\r\n    // execute their onSnapEnd function\r\n    if (cfg.hasOwnProperty('onSnapEnd') === true &&\r\n      typeof cfg.onSnapEnd === 'function') {\r\n      cfg.onSnapEnd(DRAGGED_PIECE_SOURCE, square, DRAGGED_PIECE);\r\n    }\r\n  };\r\n\r\n  // snap the piece to the target square\r\n  var opts = {\r\n    duration: cfg.snapSpeed,\r\n    complete: complete\r\n  };\r\n  draggedPieceEl.animate(targetSquarePosition, opts);\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = false;\r\n}\r\n\r\nfunction beginDraggingPiece(source, piece, x, y) {\r\n  // run their custom onDragStart function\r\n  // their custom onDragStart function can cancel drag start\r\n  if (typeof cfg.onDragStart === 'function' &&\r\n      cfg.onDragStart(source, piece,\r\n        deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION) === false) {\r\n    return;\r\n  }\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = true;\r\n  DRAGGED_PIECE = piece;\r\n  DRAGGED_PIECE_SOURCE = source;\r\n\r\n  // if the piece came from spare pieces, location is offboard\r\n  if (source === 'spare') {\r\n    DRAGGED_PIECE_LOCATION = 'offboard';\r\n  }\r\n  else {\r\n    DRAGGED_PIECE_LOCATION = source;\r\n  }\r\n\r\n  // capture the x, y coords of all squares in memory\r\n  captureSquareOffsets();\r\n\r\n  // create the dragged piece\r\n  draggedPieceEl.attr('src', buildPieceImgSrc(piece))\r\n    .css({\r\n      display: '',\r\n      position: 'absolute',\r\n      left: x - (SQUARE_SIZE / 2),\r\n      top: y - (SQUARE_SIZE / 2)\r\n    });\r\n\r\n  if (source !== 'spare') {\r\n    // highlight the source square and hide the piece\r\n    $('#' + SQUARE_ELS_IDS[source]).addClass(CSS.highlight1)\r\n      .find('.' + CSS.piece).css('display', 'none');\r\n  }\r\n}\r\n\r\nfunction updateDraggedPiece(x, y) {\r\n  // put the dragged piece over the mouse cursor\r\n  draggedPieceEl.css({\r\n    left: x - (SQUARE_SIZE / 2),\r\n    top: y - (SQUARE_SIZE / 2)\r\n  });\r\n\r\n  // get location\r\n  var location = isXYOnSquare(x, y);\r\n\r\n  // do nothing if the location has not changed\r\n  if (location === DRAGGED_PIECE_LOCATION) return;\r\n\r\n  // remove highlight from previous square\r\n  if (validSquare(DRAGGED_PIECE_LOCATION) === true) {\r\n    $('#' + SQUARE_ELS_IDS[DRAGGED_PIECE_LOCATION])\r\n      .removeClass(CSS.highlight2);\r\n  }\r\n\r\n  // add highlight to new square\r\n  if (validSquare(location) === true) {\r\n    $('#' + SQUARE_ELS_IDS[location]).addClass(CSS.highlight2);\r\n  }\r\n\r\n  // run onDragMove\r\n  if (typeof cfg.onDragMove === 'function') {\r\n    cfg.onDragMove(location, DRAGGED_PIECE_LOCATION,\r\n      DRAGGED_PIECE_SOURCE, DRAGGED_PIECE,\r\n      deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION);\r\n  }\r\n\r\n  // update state\r\n  DRAGGED_PIECE_LOCATION = location;\r\n}\r\n\r\nfunction stopDraggedPiece(location) {\r\n  // determine what the action should be\r\n  var action = 'drop';\r\n  if (location === 'offboard' && cfg.dropOffBoard === 'snapback') {\r\n    action = 'snapback';\r\n  }\r\n  if (location === 'offboard' && cfg.dropOffBoard === 'trash') {\r\n    action = 'trash';\r\n  }\r\n\r\n  // run their onDrop function, which can potentially change the drop action\r\n  if (cfg.hasOwnProperty('onDrop') === true &&\r\n    typeof cfg.onDrop === 'function') {\r\n    var newPosition = deepCopy(CURRENT_POSITION);\r\n\r\n    // source piece is a spare piece and position is off the board\r\n    //if (DRAGGED_PIECE_SOURCE === 'spare' && location === 'offboard') {...}\r\n    // position has not changed; do nothing\r\n\r\n    // source piece is a spare piece and position is on the board\r\n    if (DRAGGED_PIECE_SOURCE === 'spare' && validSquare(location) === true) {\r\n      // add the piece to the board\r\n      newPosition[location] = DRAGGED_PIECE;\r\n    }\r\n\r\n    // source piece was on the board and position is off the board\r\n    if (validSquare(DRAGGED_PIECE_SOURCE) === true && location === 'offboard') {\r\n      // remove the piece from the board\r\n      delete newPosition[DRAGGED_PIECE_SOURCE];\r\n    }\r\n\r\n    // source piece was on the board and position is on the board\r\n    if (validSquare(DRAGGED_PIECE_SOURCE) === true &&\r\n      validSquare(location) === true) {\r\n      // move the piece\r\n      delete newPosition[DRAGGED_PIECE_SOURCE];\r\n      newPosition[location] = DRAGGED_PIECE;\r\n    }\r\n\r\n    var oldPosition = deepCopy(CURRENT_POSITION);\r\n\r\n    var result = cfg.onDrop(DRAGGED_PIECE_SOURCE, location, DRAGGED_PIECE,\r\n      newPosition, oldPosition, CURRENT_ORIENTATION);\r\n    if (result === 'snapback' || result === 'trash') {\r\n      action = result;\r\n    }\r\n  }\r\n\r\n  // do it!\r\n  if (action === 'snapback') {\r\n    snapbackDraggedPiece();\r\n  }\r\n  else if (action === 'trash') {\r\n    trashDraggedPiece();\r\n  }\r\n  else if (action === 'drop') {\r\n    dropDraggedPieceOnSquare(location);\r\n  }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Public Methods\r\n//------------------------------------------------------------------------------\r\n\r\n// clear the board\r\nwidget.clear = function(useAnimation) {\r\n  widget.position({}, useAnimation);\r\n};\r\n\r\n// remove the widget from the page\r\nwidget.destroy = function() {\r\n  // remove markup\r\n  containerEl.html('');\r\n  draggedPieceEl.remove();\r\n\r\n  // remove event handlers\r\n  containerEl.unbind();\r\n};\r\n\r\n// shorthand method to get the current FEN\r\nwidget.fen = function() {\r\n  return widget.position('fen');\r\n};\r\n\r\n// flip orientation\r\nwidget.flip = function() {\r\n  return widget.orientation('flip');\r\n};\r\n\r\n/*\r\n// TODO: write this, GitHub Issue #5\r\nwidget.highlight = function() {\r\n\r\n};\r\n*/\r\n\r\n// move pieces\r\nwidget.move = function() {\r\n  // no need to throw an error here; just do nothing\r\n  if (arguments.length === 0) return;\r\n\r\n  var useAnimation = true;\r\n\r\n  // collect the moves into an object\r\n  var moves = {};\r\n  for (var i = 0; i < arguments.length; i++) {\r\n    // any \"false\" to this function means no animations\r\n    if (arguments[i] === false) {\r\n      useAnimation = false;\r\n      continue;\r\n    }\r\n\r\n    // skip invalid arguments\r\n    if (validMove(arguments[i]) !== true) {\r\n      error(2826, 'Invalid move passed to the move method.', arguments[i]);\r\n      continue;\r\n    }\r\n\r\n    var tmp = arguments[i].split('-');\r\n    moves[tmp[0]] = tmp[1];\r\n  }\r\n\r\n  // calculate position from moves\r\n  var newPos = calculatePositionFromMoves(CURRENT_POSITION, moves);\r\n\r\n  // update the board\r\n  widget.position(newPos, useAnimation);\r\n\r\n  // return the new position object\r\n  return newPos;\r\n};\r\n\r\nwidget.orientation = function(arg) {\r\n  // no arguments, return the current orientation\r\n  if (arguments.length === 0) {\r\n    return CURRENT_ORIENTATION;\r\n  }\r\n\r\n  // set to white or black\r\n  if (arg === 'white' || arg === 'black') {\r\n    CURRENT_ORIENTATION = arg;\r\n    drawBoard();\r\n    return CURRENT_ORIENTATION;\r\n  }\r\n\r\n  // flip orientation\r\n  if (arg === 'flip') {\r\n    CURRENT_ORIENTATION = (CURRENT_ORIENTATION === 'white') ? 'black' : 'white';\r\n    drawBoard();\r\n    return CURRENT_ORIENTATION;\r\n  }\r\n\r\n  error(5482, 'Invalid value passed to the orientation method.', arg);\r\n};\r\n\r\nwidget.position = function(position, useAnimation) {\r\n  // no arguments, return the current position\r\n  if (arguments.length === 0) {\r\n    return deepCopy(CURRENT_POSITION);\r\n  }\r\n\r\n  // get position as FEN\r\n  if (typeof position === 'string' && position.toLowerCase() === 'fen') {\r\n    return objToFen(CURRENT_POSITION);\r\n  }\r\n\r\n  // default for useAnimations is true\r\n  if (useAnimation !== false) {\r\n    useAnimation = true;\r\n  }\r\n\r\n  // start position\r\n  if (typeof position === 'string' && position.toLowerCase() === 'start') {\r\n    position = deepCopy(START_POSITION);\r\n  }\r\n\r\n  // convert FEN to position object\r\n  if (validFen(position) === true) {\r\n    position = fenToObj(position);\r\n  }\r\n\r\n  // validate position object\r\n  if (validPositionObject(position) !== true) {\r\n    error(6482, 'Invalid value passed to the position method.', position);\r\n    return;\r\n  }\r\n\r\n  if (useAnimation === true) {\r\n    // start the animations\r\n    doAnimations(calculateAnimations(CURRENT_POSITION, position),\r\n      CURRENT_POSITION, position);\r\n\r\n    // set the new position\r\n    setCurrentPosition(position);\r\n  }\r\n  // instant update\r\n  else {\r\n    setCurrentPosition(position);\r\n    drawPositionInstant();\r\n  }\r\n};\r\n\r\nwidget.resize = function() {\r\n  // calulate the new square size\r\n  SQUARE_SIZE = calculateSquareSize();\r\n\r\n  // set board width\r\n  boardEl.css('width', (SQUARE_SIZE * 8) + 'px');\r\n\r\n  // set drag piece size\r\n  draggedPieceEl.css({\r\n    height: SQUARE_SIZE,\r\n    width: SQUARE_SIZE\r\n  });\r\n\r\n  // spare pieces\r\n  if (cfg.sparePieces === true) {\r\n    containerEl.find('.' + CSS.sparePieces)\r\n      .css('paddingLeft', (SQUARE_SIZE + BOARD_BORDER_SIZE) + 'px');\r\n  }\r\n\r\n  // redraw the board\r\n  drawBoard();\r\n};\r\n\r\n// set the starting position\r\nwidget.start = function(useAnimation) {\r\n  widget.position('start', useAnimation);\r\n};\r\n\r\n//------------------------------------------------------------------------------\r\n// Browser Events\r\n//------------------------------------------------------------------------------\r\n\r\nfunction isTouchDevice() {\r\n  return ('ontouchstart' in document.documentElement);\r\n}\r\n\r\n// reference: http://www.quirksmode.org/js/detect.html\r\nfunction isMSIE() {\r\n  return (navigator && navigator.userAgent &&\r\n      navigator.userAgent.search(/MSIE/) !== -1);\r\n}\r\n\r\nfunction stopDefault(e) {\r\n  e.preventDefault();\r\n}\r\n\r\nfunction mousedownSquare(e) {\r\n  // do nothing if we're not draggable\r\n  if (cfg.draggable !== true) return;\r\n\r\n  var square = $(this).attr('data-square');\r\n\r\n  // no piece on this square\r\n  if (validSquare(square) !== true ||\r\n      CURRENT_POSITION.hasOwnProperty(square) !== true) {\r\n    return;\r\n  }\r\n\r\n  beginDraggingPiece(square, CURRENT_POSITION[square], e.pageX, e.pageY);\r\n}\r\n\r\nfunction touchstartSquare(e) {\r\n  // do nothing if we're not draggable\r\n  if (cfg.draggable !== true) return;\r\n\r\n  var square = $(this).attr('data-square');\r\n\r\n  // no piece on this square\r\n  if (validSquare(square) !== true ||\r\n      CURRENT_POSITION.hasOwnProperty(square) !== true) {\r\n    return;\r\n  }\r\n\r\n  e = e.originalEvent;\r\n  beginDraggingPiece(square, CURRENT_POSITION[square],\r\n    e.changedTouches[0].pageX, e.changedTouches[0].pageY);\r\n}\r\n\r\nfunction mousedownSparePiece(e) {\r\n  // do nothing if sparePieces is not enabled\r\n  if (cfg.sparePieces !== true) return;\r\n\r\n  var piece = $(this).attr('data-piece');\r\n\r\n  beginDraggingPiece('spare', piece, e.pageX, e.pageY);\r\n}\r\n\r\nfunction touchstartSparePiece(e) {\r\n  // do nothing if sparePieces is not enabled\r\n  if (cfg.sparePieces !== true) return;\r\n\r\n  var piece = $(this).attr('data-piece');\r\n\r\n  e = e.originalEvent;\r\n  beginDraggingPiece('spare', piece,\r\n    e.changedTouches[0].pageX, e.changedTouches[0].pageY);\r\n}\r\n\r\nfunction mousemoveWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  updateDraggedPiece(e.pageX, e.pageY);\r\n}\r\n\r\nfunction touchmoveWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  // prevent screen from scrolling\r\n  e.preventDefault();\r\n\r\n  updateDraggedPiece(e.originalEvent.changedTouches[0].pageX,\r\n    e.originalEvent.changedTouches[0].pageY);\r\n}\r\n\r\nfunction mouseupWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  // get the location\r\n  var location = isXYOnSquare(e.pageX, e.pageY);\r\n\r\n  stopDraggedPiece(location);\r\n}\r\n\r\nfunction touchendWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  // get the location\r\n  var location = isXYOnSquare(e.originalEvent.changedTouches[0].pageX,\r\n    e.originalEvent.changedTouches[0].pageY);\r\n\r\n  stopDraggedPiece(location);\r\n}\r\n\r\nfunction mouseenterSquare(e) {\r\n  // do not fire this event if we are dragging a piece\r\n  // NOTE: this should never happen, but it's a safeguard\r\n  if (DRAGGING_A_PIECE !== false) return;\r\n\r\n  if (cfg.hasOwnProperty('onMouseoverSquare') !== true ||\r\n    typeof cfg.onMouseoverSquare !== 'function') return;\r\n\r\n  // get the square\r\n  var square = $(e.currentTarget).attr('data-square');\r\n\r\n  // NOTE: this should never happen; defensive\r\n  if (validSquare(square) !== true) return;\r\n\r\n  // get the piece on this square\r\n  var piece = false;\r\n  if (CURRENT_POSITION.hasOwnProperty(square) === true) {\r\n    piece = CURRENT_POSITION[square];\r\n  }\r\n\r\n  // execute their function\r\n  cfg.onMouseoverSquare(square, piece, deepCopy(CURRENT_POSITION),\r\n    CURRENT_ORIENTATION);\r\n}\r\n\r\nfunction mouseleaveSquare(e) {\r\n  // do not fire this event if we are dragging a piece\r\n  // NOTE: this should never happen, but it's a safeguard\r\n  if (DRAGGING_A_PIECE !== false) return;\r\n\r\n  if (cfg.hasOwnProperty('onMouseoutSquare') !== true ||\r\n    typeof cfg.onMouseoutSquare !== 'function') return;\r\n\r\n  // get the square\r\n  var square = $(e.currentTarget).attr('data-square');\r\n\r\n  // NOTE: this should never happen; defensive\r\n  if (validSquare(square) !== true) return;\r\n\r\n  // get the piece on this square\r\n  var piece = false;\r\n  if (CURRENT_POSITION.hasOwnProperty(square) === true) {\r\n    piece = CURRENT_POSITION[square];\r\n  }\r\n\r\n  // execute their function\r\n  cfg.onMouseoutSquare(square, piece, deepCopy(CURRENT_POSITION),\r\n    CURRENT_ORIENTATION);\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Initialization\r\n//------------------------------------------------------------------------------\r\n\r\nfunction addEvents() {\r\n  // prevent browser \"image drag\"\r\n  $('body').on('mousedown mousemove', '.' + CSS.piece, stopDefault);\r\n\r\n  // mouse drag pieces\r\n  boardEl.on('mousedown', '.' + CSS.square, mousedownSquare);\r\n  containerEl.on('mousedown', '.' + CSS.sparePieces + ' .' + CSS.piece,\r\n    mousedownSparePiece);\r\n\r\n  // mouse enter / leave square\r\n  boardEl.on('mouseenter', '.' + CSS.square, mouseenterSquare)\r\n    .on('mouseleave', '.' + CSS.square, mouseleaveSquare);\r\n\r\n  // IE doesn't like the events on the window object, but other browsers\r\n  // perform better that way\r\n  if (isMSIE() === true) {\r\n    // IE-specific prevent browser \"image drag\"\r\n    document.ondragstart = function() { return false; };\r\n\r\n    $('body').on('mousemove', mousemoveWindow)\r\n      .on('mouseup', mouseupWindow);\r\n  }\r\n  else {\r\n    $(window).on('mousemove', mousemoveWindow)\r\n      .on('mouseup', mouseupWindow);\r\n  }\r\n\r\n  // touch drag pieces\r\n  if (isTouchDevice() === true) {\r\n    boardEl.on('touchstart', '.' + CSS.square, touchstartSquare);\r\n    containerEl.on('touchstart', '.' + CSS.sparePieces + ' .' + CSS.piece,\r\n      touchstartSparePiece);\r\n    $(window).on('touchmove', touchmoveWindow)\r\n      .on('touchend', touchendWindow);\r\n  }\r\n}\r\n\r\nfunction initDom() {\r\n  // create unique IDs for all the elements we will create\r\n  createElIds();\r\n\r\n  // build board and save it in memory\r\n  containerEl.html(buildBoardContainer());\r\n  boardEl = containerEl.find('.' + CSS.board);\r\n\r\n  if (cfg.sparePieces === true) {\r\n    sparePiecesTopEl = containerEl.find('.' + CSS.sparePiecesTop);\r\n    sparePiecesBottomEl = containerEl.find('.' + CSS.sparePiecesBottom);\r\n  }\r\n\r\n  // create the drag piece\r\n  var draggedPieceId = uuid();\r\n  $('body').append(buildPiece('wP', true, draggedPieceId));\r\n  draggedPieceEl = $('#' + draggedPieceId);\r\n\r\n  // get the border size\r\n  BOARD_BORDER_SIZE = parseInt(boardEl.css('borderLeftWidth'), 10);\r\n\r\n  // set the size and draw the board\r\n  widget.resize();\r\n}\r\n\r\nfunction init() {\r\n  if (checkDeps() !== true ||\r\n      expandConfig() !== true) return;\r\n\r\n  initDom();\r\n  addEvents();\r\n}\r\n\r\n// go time\r\ninit();\r\n\r\n// return the widget object\r\nreturn widget;\r\n\r\n}; // end window.ChessBoard\r\n\r\n// expose util functions\r\nChessBoard.fenToObj = fenToObj;\r\nChessBoard.objToFen = objToFen;\r\n\r\nmodule.exports = ChessBoard;\r\n","/*\r\n * Copyright (c) 2020, Jeff Hlywa (jhlywa@gmail.com)\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n *----------------------------------------------------------------------------*/\r\n\r\nvar Chess = function(fen) {\r\n    var BLACK = 'b'\r\n    var WHITE = 'w'\r\n  \r\n    var EMPTY = -1\r\n  \r\n    var PAWN = 'p'\r\n    var KNIGHT = 'n'\r\n    var BISHOP = 'b'\r\n    var ROOK = 'r'\r\n    var QUEEN = 'q'\r\n    var KING = 'k'\r\n  \r\n    var SYMBOLS = 'pnbrqkPNBRQK'\r\n  \r\n    var DEFAULT_POSITION =\r\n      'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'\r\n  \r\n    var POSSIBLE_RESULTS = ['1-0', '0-1', '1/2-1/2', '*']\r\n  \r\n    var PAWN_OFFSETS = {\r\n      b: [16, 32, 17, 15],\r\n      w: [-16, -32, -17, -15]\r\n    }\r\n  \r\n    var PIECE_OFFSETS = {\r\n      n: [-18, -33, -31, -14, 18, 33, 31, 14],\r\n      b: [-17, -15, 17, 15],\r\n      r: [-16, 1, 16, -1],\r\n      q: [-17, -16, -15, 1, 17, 16, 15, -1],\r\n      k: [-17, -16, -15, 1, 17, 16, 15, -1]\r\n    }\r\n  \r\n    // prettier-ignore\r\n    var ATTACKS = [\r\n      20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20, 0,\r\n       0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\r\n       0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\r\n       0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\r\n       0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\r\n       0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\r\n       0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\r\n      24,24,24,24,24,24,56,  0, 56,24,24,24,24,24,24, 0,\r\n       0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\r\n       0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\r\n       0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\r\n       0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\r\n       0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\r\n       0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\r\n      20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20\r\n    ];\r\n  \r\n    // prettier-ignore\r\n    var RAYS = [\r\n       17,  0,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0,  0, 15, 0,\r\n        0, 17,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0, 15,  0, 0,\r\n        0,  0, 17,  0,  0,  0,  0, 16,  0,  0,  0,  0, 15,  0,  0, 0,\r\n        0,  0,  0, 17,  0,  0,  0, 16,  0,  0,  0, 15,  0,  0,  0, 0,\r\n        0,  0,  0,  0, 17,  0,  0, 16,  0,  0, 15,  0,  0,  0,  0, 0,\r\n        0,  0,  0,  0,  0, 17,  0, 16,  0, 15,  0,  0,  0,  0,  0, 0,\r\n        0,  0,  0,  0,  0,  0, 17, 16, 15,  0,  0,  0,  0,  0,  0, 0,\r\n        1,  1,  1,  1,  1,  1,  1,  0, -1, -1,  -1,-1, -1, -1, -1, 0,\r\n        0,  0,  0,  0,  0,  0,-15,-16,-17,  0,  0,  0,  0,  0,  0, 0,\r\n        0,  0,  0,  0,  0,-15,  0,-16,  0,-17,  0,  0,  0,  0,  0, 0,\r\n        0,  0,  0,  0,-15,  0,  0,-16,  0,  0,-17,  0,  0,  0,  0, 0,\r\n        0,  0,  0,-15,  0,  0,  0,-16,  0,  0,  0,-17,  0,  0,  0, 0,\r\n        0,  0,-15,  0,  0,  0,  0,-16,  0,  0,  0,  0,-17,  0,  0, 0,\r\n        0,-15,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,-17,  0, 0,\r\n      -15,  0,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,  0,-17\r\n    ];\r\n  \r\n    var SHIFTS = { p: 0, n: 1, b: 2, r: 3, q: 4, k: 5 }\r\n  \r\n    var FLAGS = {\r\n      NORMAL: 'n',\r\n      CAPTURE: 'c',\r\n      BIG_PAWN: 'b',\r\n      EP_CAPTURE: 'e',\r\n      PROMOTION: 'p',\r\n      KSIDE_CASTLE: 'k',\r\n      QSIDE_CASTLE: 'q'\r\n    }\r\n  \r\n    var BITS = {\r\n      NORMAL: 1,\r\n      CAPTURE: 2,\r\n      BIG_PAWN: 4,\r\n      EP_CAPTURE: 8,\r\n      PROMOTION: 16,\r\n      KSIDE_CASTLE: 32,\r\n      QSIDE_CASTLE: 64\r\n    }\r\n  \r\n    var RANK_1 = 7\r\n    var RANK_2 = 6\r\n    var RANK_3 = 5\r\n    var RANK_4 = 4\r\n    var RANK_5 = 3\r\n    var RANK_6 = 2\r\n    var RANK_7 = 1\r\n    var RANK_8 = 0\r\n  \r\n    // prettier-ignore\r\n    var SQUARES = {\r\n      a8:   0, b8:   1, c8:   2, d8:   3, e8:   4, f8:   5, g8:   6, h8:   7,\r\n      a7:  16, b7:  17, c7:  18, d7:  19, e7:  20, f7:  21, g7:  22, h7:  23,\r\n      a6:  32, b6:  33, c6:  34, d6:  35, e6:  36, f6:  37, g6:  38, h6:  39,\r\n      a5:  48, b5:  49, c5:  50, d5:  51, e5:  52, f5:  53, g5:  54, h5:  55,\r\n      a4:  64, b4:  65, c4:  66, d4:  67, e4:  68, f4:  69, g4:  70, h4:  71,\r\n      a3:  80, b3:  81, c3:  82, d3:  83, e3:  84, f3:  85, g3:  86, h3:  87,\r\n      a2:  96, b2:  97, c2:  98, d2:  99, e2: 100, f2: 101, g2: 102, h2: 103,\r\n      a1: 112, b1: 113, c1: 114, d1: 115, e1: 116, f1: 117, g1: 118, h1: 119\r\n    };\r\n  \r\n    var ROOKS = {\r\n      w: [\r\n        { square: SQUARES.a1, flag: BITS.QSIDE_CASTLE },\r\n        { square: SQUARES.h1, flag: BITS.KSIDE_CASTLE }\r\n      ],\r\n      b: [\r\n        { square: SQUARES.a8, flag: BITS.QSIDE_CASTLE },\r\n        { square: SQUARES.h8, flag: BITS.KSIDE_CASTLE }\r\n      ]\r\n    }\r\n  \r\n    var board = new Array(128)\r\n    var kings = { w: EMPTY, b: EMPTY }\r\n    var turn = WHITE\r\n    var castling = { w: 0, b: 0 }\r\n    var ep_square = EMPTY\r\n    var half_moves = 0\r\n    var move_number = 1\r\n    var history = []\r\n    var header = {}\r\n    var comments = {}\r\n  \r\n    /* if the user passes in a fen string, load it, else default to\r\n     * starting position\r\n     */\r\n    if (typeof fen === 'undefined') {\r\n      load(DEFAULT_POSITION)\r\n    } else {\r\n      load(fen)\r\n    }\r\n  \r\n    function clear(keep_headers) {\r\n      if (typeof keep_headers === 'undefined') {\r\n        keep_headers = false\r\n      }\r\n  \r\n      board = new Array(128)\r\n      kings = { w: EMPTY, b: EMPTY }\r\n      turn = WHITE\r\n      castling = { w: 0, b: 0 }\r\n      ep_square = EMPTY\r\n      half_moves = 0\r\n      move_number = 1\r\n      history = []\r\n      if (!keep_headers) header = {}\r\n      comments = {}\r\n      update_setup(generate_fen())\r\n    }\r\n  \r\n    function prune_comments() {\r\n      var reversed_history = [];\r\n      var current_comments = {};\r\n      var copy_comment = function(fen) {\r\n        if (fen in comments) {\r\n          current_comments[fen] = comments[fen];\r\n        }\r\n      };\r\n      while (history.length > 0) {\r\n        reversed_history.push(undo_move());\r\n      }\r\n      copy_comment(generate_fen());\r\n      while (reversed_history.length > 0) {\r\n        make_move(reversed_history.pop());\r\n        copy_comment(generate_fen());\r\n      }\r\n      comments = current_comments;\r\n    }\r\n  \r\n    function reset() {\r\n      load(DEFAULT_POSITION)\r\n    }\r\n  \r\n    function load(fen, keep_headers) {\r\n      if (typeof keep_headers === 'undefined') {\r\n        keep_headers = false\r\n      }\r\n  \r\n      var tokens = fen.split(/\\s+/)\r\n      var position = tokens[0]\r\n      var square = 0\r\n  \r\n      if (!validate_fen(fen).valid) {\r\n        return false\r\n      }\r\n  \r\n      clear(keep_headers)\r\n  \r\n      for (var i = 0; i < position.length; i++) {\r\n        var piece = position.charAt(i)\r\n  \r\n        if (piece === '/') {\r\n          square += 8\r\n        } else if (is_digit(piece)) {\r\n          square += parseInt(piece, 10)\r\n        } else {\r\n          var color = piece < 'a' ? WHITE : BLACK\r\n          put({ type: piece.toLowerCase(), color: color }, algebraic(square))\r\n          square++\r\n        }\r\n      }\r\n  \r\n      turn = tokens[1]\r\n  \r\n      if (tokens[2].indexOf('K') > -1) {\r\n        castling.w |= BITS.KSIDE_CASTLE\r\n      }\r\n      if (tokens[2].indexOf('Q') > -1) {\r\n        castling.w |= BITS.QSIDE_CASTLE\r\n      }\r\n      if (tokens[2].indexOf('k') > -1) {\r\n        castling.b |= BITS.KSIDE_CASTLE\r\n      }\r\n      if (tokens[2].indexOf('q') > -1) {\r\n        castling.b |= BITS.QSIDE_CASTLE\r\n      }\r\n  \r\n      ep_square = tokens[3] === '-' ? EMPTY : SQUARES[tokens[3]]\r\n      half_moves = parseInt(tokens[4], 10)\r\n      move_number = parseInt(tokens[5], 10)\r\n  \r\n      update_setup(generate_fen())\r\n  \r\n      return true\r\n    }\r\n  \r\n    /* TODO: this function is pretty much crap - it validates structure but\r\n     * completely ignores content (e.g. doesn't verify that each side has a king)\r\n     * ... we should rewrite this, and ditch the silly error_number field while\r\n     * we're at it\r\n     */\r\n    function validate_fen(fen) {\r\n      var errors = {\r\n        0: 'No errors.',\r\n        1: 'FEN string must contain six space-delimited fields.',\r\n        2: '6th field (move number) must be a positive integer.',\r\n        3: '5th field (half move counter) must be a non-negative integer.',\r\n        4: '4th field (en-passant square) is invalid.',\r\n        5: '3rd field (castling availability) is invalid.',\r\n        6: '2nd field (side to move) is invalid.',\r\n        7: \"1st field (piece positions) does not contain 8 '/'-delimited rows.\",\r\n        8: '1st field (piece positions) is invalid [consecutive numbers].',\r\n        9: '1st field (piece positions) is invalid [invalid piece].',\r\n        10: '1st field (piece positions) is invalid [row too large].',\r\n        11: 'Illegal en-passant square'\r\n      }\r\n  \r\n      /* 1st criterion: 6 space-seperated fields? */\r\n      var tokens = fen.split(/\\s+/)\r\n      if (tokens.length !== 6) {\r\n        return { valid: false, error_number: 1, error: errors[1] }\r\n      }\r\n  \r\n      /* 2nd criterion: move number field is a integer value > 0? */\r\n      if (isNaN(tokens[5]) || parseInt(tokens[5], 10) <= 0) {\r\n        return { valid: false, error_number: 2, error: errors[2] }\r\n      }\r\n  \r\n      /* 3rd criterion: half move counter is an integer >= 0? */\r\n      if (isNaN(tokens[4]) || parseInt(tokens[4], 10) < 0) {\r\n        return { valid: false, error_number: 3, error: errors[3] }\r\n      }\r\n  \r\n      /* 4th criterion: 4th field is a valid e.p.-string? */\r\n      if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\r\n        return { valid: false, error_number: 4, error: errors[4] }\r\n      }\r\n  \r\n      /* 5th criterion: 3th field is a valid castle-string? */\r\n      if (!/^(KQ?k?q?|Qk?q?|kq?|q|-)$/.test(tokens[2])) {\r\n        return { valid: false, error_number: 5, error: errors[5] }\r\n      }\r\n  \r\n      /* 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)? */\r\n      if (!/^(w|b)$/.test(tokens[1])) {\r\n        return { valid: false, error_number: 6, error: errors[6] }\r\n      }\r\n  \r\n      /* 7th criterion: 1st field contains 8 rows? */\r\n      var rows = tokens[0].split('/')\r\n      if (rows.length !== 8) {\r\n        return { valid: false, error_number: 7, error: errors[7] }\r\n      }\r\n  \r\n      /* 8th criterion: every row is valid? */\r\n      for (var i = 0; i < rows.length; i++) {\r\n        /* check for right sum of fields AND not two numbers in succession */\r\n        var sum_fields = 0\r\n        var previous_was_number = false\r\n  \r\n        for (var k = 0; k < rows[i].length; k++) {\r\n          if (!isNaN(rows[i][k])) {\r\n            if (previous_was_number) {\r\n              return { valid: false, error_number: 8, error: errors[8] }\r\n            }\r\n            sum_fields += parseInt(rows[i][k], 10)\r\n            previous_was_number = true\r\n          } else {\r\n            if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\r\n              return { valid: false, error_number: 9, error: errors[9] }\r\n            }\r\n            sum_fields += 1\r\n            previous_was_number = false\r\n          }\r\n        }\r\n        if (sum_fields !== 8) {\r\n          return { valid: false, error_number: 10, error: errors[10] }\r\n        }\r\n      }\r\n  \r\n      if (\r\n        (tokens[3][1] == '3' && tokens[1] == 'w') ||\r\n        (tokens[3][1] == '6' && tokens[1] == 'b')\r\n      ) {\r\n        return { valid: false, error_number: 11, error: errors[11] }\r\n      }\r\n  \r\n      /* everything's okay! */\r\n      return { valid: true, error_number: 0, error: errors[0] }\r\n    }\r\n  \r\n    function generate_fen() {\r\n      var empty = 0\r\n      var fen = ''\r\n  \r\n      for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\r\n        if (board[i] == null) {\r\n          empty++\r\n        } else {\r\n          if (empty > 0) {\r\n            fen += empty\r\n            empty = 0\r\n          }\r\n          var color = board[i].color\r\n          var piece = board[i].type\r\n  \r\n          fen += color === WHITE ? piece.toUpperCase() : piece.toLowerCase()\r\n        }\r\n  \r\n        if ((i + 1) & 0x88) {\r\n          if (empty > 0) {\r\n            fen += empty\r\n          }\r\n  \r\n          if (i !== SQUARES.h1) {\r\n            fen += '/'\r\n          }\r\n  \r\n          empty = 0\r\n          i += 8\r\n        }\r\n      }\r\n  \r\n      var cflags = ''\r\n      if (castling[WHITE] & BITS.KSIDE_CASTLE) {\r\n        cflags += 'K'\r\n      }\r\n      if (castling[WHITE] & BITS.QSIDE_CASTLE) {\r\n        cflags += 'Q'\r\n      }\r\n      if (castling[BLACK] & BITS.KSIDE_CASTLE) {\r\n        cflags += 'k'\r\n      }\r\n      if (castling[BLACK] & BITS.QSIDE_CASTLE) {\r\n        cflags += 'q'\r\n      }\r\n  \r\n      /* do we have an empty castling flag? */\r\n      cflags = cflags || '-'\r\n      var epflags = ep_square === EMPTY ? '-' : algebraic(ep_square)\r\n  \r\n      return [fen, turn, cflags, epflags, half_moves, move_number].join(' ')\r\n    }\r\n  \r\n    function set_header(args) {\r\n      for (var i = 0; i < args.length; i += 2) {\r\n        if (typeof args[i] === 'string' && typeof args[i + 1] === 'string') {\r\n          header[args[i]] = args[i + 1]\r\n        }\r\n      }\r\n      return header\r\n    }\r\n  \r\n    /* called when the initial board setup is changed with put() or remove().\r\n     * modifies the SetUp and FEN properties of the header object.  if the FEN is\r\n     * equal to the default position, the SetUp and FEN are deleted\r\n     * the setup is only updated if history.length is zero, ie moves haven't been\r\n     * made.\r\n     */\r\n    function update_setup(fen) {\r\n      if (history.length > 0) return\r\n  \r\n      if (fen !== DEFAULT_POSITION) {\r\n        header['SetUp'] = '1'\r\n        header['FEN'] = fen\r\n      } else {\r\n        delete header['SetUp']\r\n        delete header['FEN']\r\n      }\r\n    }\r\n  \r\n    function get(square) {\r\n      var piece = board[SQUARES[square]]\r\n      return piece ? { type: piece.type, color: piece.color } : null\r\n    }\r\n  \r\n    function put(piece, square) {\r\n      /* check for valid piece object */\r\n      if (!('type' in piece && 'color' in piece)) {\r\n        return false\r\n      }\r\n  \r\n      /* check for piece */\r\n      if (SYMBOLS.indexOf(piece.type.toLowerCase()) === -1) {\r\n        return false\r\n      }\r\n  \r\n      /* check for valid square */\r\n      if (!(square in SQUARES)) {\r\n        return false\r\n      }\r\n  \r\n      var sq = SQUARES[square]\r\n  \r\n      /* don't let the user place more than one king */\r\n      if (\r\n        piece.type == KING &&\r\n        !(kings[piece.color] == EMPTY || kings[piece.color] == sq)\r\n      ) {\r\n        return false\r\n      }\r\n  \r\n      board[sq] = { type: piece.type, color: piece.color }\r\n      if (piece.type === KING) {\r\n        kings[piece.color] = sq\r\n      }\r\n  \r\n      update_setup(generate_fen())\r\n  \r\n      return true\r\n    }\r\n  \r\n    function remove(square) {\r\n      var piece = get(square)\r\n      board[SQUARES[square]] = null\r\n      if (piece && piece.type === KING) {\r\n        kings[piece.color] = EMPTY\r\n      }\r\n  \r\n      update_setup(generate_fen())\r\n  \r\n      return piece\r\n    }\r\n  \r\n    function build_move(board, from, to, flags, promotion) {\r\n      var move = {\r\n        color: turn,\r\n        from: from,\r\n        to: to,\r\n        flags: flags,\r\n        piece: board[from].type\r\n      }\r\n  \r\n      if (promotion) {\r\n        move.flags |= BITS.PROMOTION\r\n        move.promotion = promotion\r\n      }\r\n  \r\n      if (board[to]) {\r\n        move.captured = board[to].type\r\n      } else if (flags & BITS.EP_CAPTURE) {\r\n        move.captured = PAWN\r\n      }\r\n      return move\r\n    }\r\n  \r\n    function generate_moves(options) {\r\n      function add_move(board, moves, from, to, flags) {\r\n        /* if pawn promotion */\r\n        if (\r\n          typeof board[from] !== \"undefined\" &&\r\n          board[from].type === PAWN &&\r\n          (rank(to) === RANK_8 || rank(to) === RANK_1)\r\n        ) {\r\n          var pieces = [QUEEN, ROOK, BISHOP, KNIGHT]\r\n          for (var i = 0, len = pieces.length; i < len; i++) {\r\n            moves.push(build_move(board, from, to, flags, pieces[i]))\r\n          }\r\n        } else {\r\n          moves.push(build_move(board, from, to, flags))\r\n        }\r\n      }\r\n  \r\n      var moves = []\r\n      var us = turn\r\n      var them = swap_color(us)\r\n      var second_rank = { b: RANK_7, w: RANK_2 }\r\n  \r\n      var first_sq = SQUARES.a8\r\n      var last_sq = SQUARES.h1\r\n      var single_square = false\r\n  \r\n      /* do we want legal moves? */\r\n      var legal =\r\n        typeof options !== 'undefined' && 'legal' in options\r\n          ? options.legal\r\n          : true\r\n  \r\n      /* are we generating moves for a single square? */\r\n      if (typeof options !== 'undefined' && 'square' in options) {\r\n        if (options.square in SQUARES) {\r\n          first_sq = last_sq = SQUARES[options.square]\r\n          single_square = true\r\n        } else {\r\n          /* invalid square */\r\n          return []\r\n        }\r\n      }\r\n  \r\n      for (var i = first_sq; i <= last_sq; i++) {\r\n        /* did we run off the end of the board */\r\n        if (i & 0x88) {\r\n          i += 7\r\n          continue\r\n        }\r\n  \r\n        var piece = board[i]\r\n        if (piece == null || piece.color !== us) {\r\n          continue\r\n        }\r\n  \r\n        if (piece.type === PAWN) {\r\n          /* single square, non-capturing */\r\n          var square = i + PAWN_OFFSETS[us][0]\r\n          if (board[square] == null) {\r\n            add_move(board, moves, i, square, BITS.NORMAL)\r\n  \r\n            /* double square */\r\n            var square = i + PAWN_OFFSETS[us][1]\r\n            if (second_rank[us] === rank(i) && board[square] == null) {\r\n              add_move(board, moves, i, square, BITS.BIG_PAWN)\r\n            }\r\n          }\r\n  \r\n          /* pawn captures */\r\n          for (j = 2; j < 4; j++) {\r\n            var square = i + PAWN_OFFSETS[us][j]\r\n            if (square & 0x88) continue\r\n  \r\n            if (board[square] != null && board[square].color === them) {\r\n              add_move(board, moves, i, square, BITS.CAPTURE)\r\n            } else if (square === ep_square) {\r\n              add_move(board, moves, i, ep_square, BITS.EP_CAPTURE)\r\n            }\r\n          }\r\n        } else {\r\n          for (var j = 0, len = PIECE_OFFSETS[piece.type].length; j < len; j++) {\r\n            var offset = PIECE_OFFSETS[piece.type][j]\r\n            var square = i\r\n  \r\n            while (true) {\r\n              square += offset\r\n              if (square & 0x88) break\r\n  \r\n              if (board[square] == null) {\r\n                add_move(board, moves, i, square, BITS.NORMAL)\r\n              } else {\r\n                if (board[square].color === us) break\r\n                add_move(board, moves, i, square, BITS.CAPTURE)\r\n                break\r\n              }\r\n  \r\n              /* break, if knight or king */\r\n              if (piece.type === 'n' || piece.type === 'k') break\r\n            }\r\n          }\r\n        }\r\n      }\r\n  \r\n      /* check for castling if: a) we're generating all moves, or b) we're doing\r\n       * single square move generation on the king's square\r\n       */\r\n      if (!single_square || last_sq === kings[us]) {\r\n        /* king-side castling */\r\n        if (castling[us] & BITS.KSIDE_CASTLE) {\r\n          var castling_from = kings[us]\r\n          var castling_to = castling_from + 2\r\n  \r\n          if (\r\n            board[castling_from + 1] == null &&\r\n            board[castling_to] == null &&\r\n            !attacked(them, kings[us]) &&\r\n            !attacked(them, castling_from + 1) &&\r\n            !attacked(them, castling_to)\r\n          ) {\r\n            add_move(board, moves, kings[us], castling_to, BITS.KSIDE_CASTLE)\r\n          }\r\n        }\r\n  \r\n        /* queen-side castling */\r\n        if (castling[us] & BITS.QSIDE_CASTLE) {\r\n          var castling_from = kings[us]\r\n          var castling_to = castling_from - 2\r\n          \r\n          if (\r\n            castling_from != -1 &&\r\n            board[castling_from - 1] == null &&\r\n            board[castling_from - 2] == null &&\r\n            board[castling_from - 3] == null &&\r\n            !attacked(them, kings[us]) &&\r\n            !attacked(them, castling_from - 1) &&\r\n            !attacked(them, castling_to)\r\n          ) {\r\n            add_move(board, moves, kings[us], castling_to, BITS.QSIDE_CASTLE)\r\n          }\r\n        }\r\n      }\r\n  \r\n      /* return all pseudo-legal moves (this includes moves that allow the king\r\n       * to be captured)\r\n       */\r\n      if (!legal) {\r\n        return moves\r\n      }\r\n  \r\n      /* filter out illegal moves */\r\n      var legal_moves = []\r\n      for (var i = 0, len = moves.length; i < len; i++) {\r\n        make_move(moves[i])\r\n        if (!king_attacked(us)) {\r\n          legal_moves.push(moves[i])\r\n        }\r\n        undo_move()\r\n      }\r\n  \r\n      return legal_moves\r\n    }\r\n  \r\n    /* convert a move from 0x88 coordinates to Standard Algebraic Notation\r\n     * (SAN)\r\n     *\r\n     * @param {boolean} sloppy Use the sloppy SAN generator to work around over\r\n     * disambiguation bugs in Fritz and Chessbase.  See below:\r\n     *\r\n     * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\r\n     * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\r\n     * 4. ... Ne7 is technically the valid SAN\r\n     */\r\n    function move_to_san(move, sloppy) {\r\n      var output = ''\r\n  \r\n      if (move.flags & BITS.KSIDE_CASTLE) {\r\n        output = 'O-O'\r\n      } else if (move.flags & BITS.QSIDE_CASTLE) {\r\n        output = 'O-O-O'\r\n      } else {\r\n        var disambiguator = get_disambiguator(move, sloppy)\r\n  \r\n        if (move.piece !== PAWN) {\r\n          output += move.piece.toUpperCase() + disambiguator\r\n        }\r\n  \r\n        if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\r\n          if (move.piece === PAWN) {\r\n            output += algebraic(move.from)[0]\r\n          }\r\n          output += 'x'\r\n        }\r\n  \r\n        output += algebraic(move.to)\r\n  \r\n        if (move.flags & BITS.PROMOTION) {\r\n          output += '=' + move.promotion.toUpperCase()\r\n        }\r\n      }\r\n  \r\n      make_move(move)\r\n      if (in_check()) {\r\n        if (in_checkmate()) {\r\n          output += '#'\r\n        } else {\r\n          output += '+'\r\n        }\r\n      }\r\n      undo_move()\r\n  \r\n      return output\r\n    }\r\n  \r\n    // parses all of the decorators out of a SAN string\r\n    function stripped_san(move) {\r\n      return move.replace(/=/, '').replace(/[+#]?[?!]*$/, '')\r\n    }\r\n  \r\n    function attacked(color, square) {\r\n      for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\r\n        /* did we run off the end of the board */\r\n        if (i & 0x88) {\r\n          i += 7\r\n          continue\r\n        }\r\n  \r\n        /* if empty square or wrong color */\r\n        if (board[i] == null || board[i].color !== color) continue\r\n  \r\n        var piece = board[i]\r\n        var difference = i - square\r\n        var index = difference + 119\r\n  \r\n        if (ATTACKS[index] & (1 << SHIFTS[piece.type])) {\r\n          if (piece.type === PAWN) {\r\n            if (difference > 0) {\r\n              if (piece.color === WHITE) return true\r\n            } else {\r\n              if (piece.color === BLACK) return true\r\n            }\r\n            continue\r\n          }\r\n  \r\n          /* if the piece is a knight or a king */\r\n          if (piece.type === 'n' || piece.type === 'k') return true\r\n  \r\n          var offset = RAYS[index]\r\n          var j = i + offset\r\n  \r\n          var blocked = false\r\n          while (j !== square) {\r\n            if (board[j] != null) {\r\n              blocked = true\r\n              break\r\n            }\r\n            j += offset\r\n          }\r\n  \r\n          if (!blocked) return true\r\n        }\r\n      }\r\n  \r\n      return false\r\n    }\r\n  \r\n    function king_attacked(color) {\r\n      return attacked(swap_color(color), kings[color])\r\n    }\r\n  \r\n    function in_check() {\r\n      return king_attacked(turn)\r\n    }\r\n  \r\n    function in_checkmate() {\r\n      return in_check() && generate_moves().length === 0\r\n    }\r\n  \r\n    function in_stalemate() {\r\n      return !in_check() && generate_moves().length === 0\r\n    }\r\n  \r\n    function insufficient_material() {\r\n      var pieces = {}\r\n      var bishops = []\r\n      var num_pieces = 0\r\n      var sq_color = 0\r\n  \r\n      for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\r\n        sq_color = (sq_color + 1) % 2\r\n        if (i & 0x88) {\r\n          i += 7\r\n          continue\r\n        }\r\n  \r\n        var piece = board[i]\r\n        if (piece) {\r\n          pieces[piece.type] = piece.type in pieces ? pieces[piece.type] + 1 : 1\r\n          if (piece.type === BISHOP) {\r\n            bishops.push(sq_color)\r\n          }\r\n          num_pieces++\r\n        }\r\n      }\r\n  \r\n      /* k vs. k */\r\n      if (num_pieces === 2) {\r\n        return true\r\n      } else if (\r\n        /* k vs. kn .... or .... k vs. kb */\r\n        num_pieces === 3 &&\r\n        (pieces[BISHOP] === 1 || pieces[KNIGHT] === 1)\r\n      ) {\r\n        return true\r\n      } else if (num_pieces === pieces[BISHOP] + 2) {\r\n        /* kb vs. kb where any number of bishops are all on the same color */\r\n        var sum = 0\r\n        var len = bishops.length\r\n        for (var i = 0; i < len; i++) {\r\n          sum += bishops[i]\r\n        }\r\n        if (sum === 0 || sum === len) {\r\n          return true\r\n        }\r\n      }\r\n  \r\n      return false\r\n    }\r\n  \r\n    function in_threefold_repetition() {\r\n      /* TODO: while this function is fine for casual use, a better\r\n       * implementation would use a Zobrist key (instead of FEN). the\r\n       * Zobrist key would be maintained in the make_move/undo_move functions,\r\n       * avoiding the costly that we do below.\r\n       */\r\n      var moves = []\r\n      var positions = {}\r\n      var repetition = false\r\n  \r\n      while (true) {\r\n        var move = undo_move()\r\n        if (!move) break\r\n        moves.push(move)\r\n      }\r\n  \r\n      while (true) {\r\n        /* remove the last two fields in the FEN string, they're not needed\r\n         * when checking for draw by rep */\r\n        var fen = generate_fen()\r\n          .split(' ')\r\n          .slice(0, 4)\r\n          .join(' ')\r\n  \r\n        /* has the position occurred three or move times */\r\n        positions[fen] = fen in positions ? positions[fen] + 1 : 1\r\n        if (positions[fen] >= 3) {\r\n          repetition = true\r\n        }\r\n  \r\n        if (!moves.length) {\r\n          break\r\n        }\r\n        make_move(moves.pop())\r\n      }\r\n  \r\n      return repetition\r\n    }\r\n  \r\n    function push(move) {\r\n      history.push({\r\n        move: move,\r\n        kings: { b: kings.b, w: kings.w },\r\n        turn: turn,\r\n        castling: { b: castling.b, w: castling.w },\r\n        ep_square: ep_square,\r\n        half_moves: half_moves,\r\n        move_number: move_number\r\n      })\r\n    }\r\n  \r\n    function make_move(move) {\r\n      var us = turn\r\n      var them = swap_color(us)\r\n      push(move)\r\n  \r\n      board[move.to] = board[move.from]\r\n      board[move.from] = null\r\n  \r\n      /* if ep capture, remove the captured pawn */\r\n      if (move.flags & BITS.EP_CAPTURE) {\r\n        if (turn === BLACK) {\r\n          board[move.to - 16] = null\r\n        } else {\r\n          board[move.to + 16] = null\r\n        }\r\n      }\r\n  \r\n      /* if pawn promotion, replace with new piece */\r\n      if (move.flags & BITS.PROMOTION) {\r\n        board[move.to] = { type: move.promotion, color: us }\r\n      }\r\n  \r\n      /* if we moved the king */\r\n      if (board[move.to].type === KING) {\r\n        kings[board[move.to].color] = move.to\r\n  \r\n        /* if we castled, move the rook next to the king */\r\n        if (move.flags & BITS.KSIDE_CASTLE) {\r\n          var castling_to = move.to - 1\r\n          var castling_from = move.to + 1\r\n          board[castling_to] = board[castling_from]\r\n          board[castling_from] = null\r\n        } else if (move.flags & BITS.QSIDE_CASTLE) {\r\n          var castling_to = move.to + 1\r\n          var castling_from = move.to - 2\r\n          board[castling_to] = board[castling_from]\r\n          board[castling_from] = null\r\n        }\r\n  \r\n        /* turn off castling */\r\n        castling[us] = ''\r\n      }\r\n  \r\n      /* turn off castling if we move a rook */\r\n      if (castling[us]) {\r\n        for (var i = 0, len = ROOKS[us].length; i < len; i++) {\r\n          if (\r\n            move.from === ROOKS[us][i].square &&\r\n            castling[us] & ROOKS[us][i].flag\r\n          ) {\r\n            castling[us] ^= ROOKS[us][i].flag\r\n            break\r\n          }\r\n        }\r\n      }\r\n  \r\n      /* turn off castling if we capture a rook */\r\n      if (castling[them]) {\r\n        for (var i = 0, len = ROOKS[them].length; i < len; i++) {\r\n          if (\r\n            move.to === ROOKS[them][i].square &&\r\n            castling[them] & ROOKS[them][i].flag\r\n          ) {\r\n            castling[them] ^= ROOKS[them][i].flag\r\n            break\r\n          }\r\n        }\r\n      }\r\n  \r\n      /* if big pawn move, update the en passant square */\r\n      if (move.flags & BITS.BIG_PAWN) {\r\n        if (turn === 'b') {\r\n          ep_square = move.to - 16\r\n        } else {\r\n          ep_square = move.to + 16\r\n        }\r\n      } else {\r\n        ep_square = EMPTY\r\n      }\r\n  \r\n      /* reset the 50 move counter if a pawn is moved or a piece is captured */\r\n      if (move.piece === PAWN) {\r\n        half_moves = 0\r\n      } else if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\r\n        half_moves = 0\r\n      } else {\r\n        half_moves++\r\n      }\r\n  \r\n      if (turn === BLACK) {\r\n        move_number++\r\n      }\r\n      turn = swap_color(turn)\r\n    }\r\n  \r\n    function undo_move() {\r\n      var old = history.pop()\r\n      if (old == null) {\r\n        return null\r\n      }\r\n  \r\n      var move = old.move\r\n      kings = old.kings\r\n      turn = old.turn\r\n      castling = old.castling\r\n      ep_square = old.ep_square\r\n      half_moves = old.half_moves\r\n      move_number = old.move_number\r\n  \r\n      var us = turn\r\n      var them = swap_color(turn)\r\n  \r\n      board[move.from] = board[move.to]\r\n      board[move.from].type = move.piece // to undo any promotions\r\n      board[move.to] = null\r\n  \r\n      if (move.flags & BITS.CAPTURE) {\r\n        board[move.to] = { type: move.captured, color: them }\r\n      } else if (move.flags & BITS.EP_CAPTURE) {\r\n        var index\r\n        if (us === BLACK) {\r\n          index = move.to - 16\r\n        } else {\r\n          index = move.to + 16\r\n        }\r\n        board[index] = { type: PAWN, color: them }\r\n      }\r\n  \r\n      if (move.flags & (BITS.KSIDE_CASTLE | BITS.QSIDE_CASTLE)) {\r\n        var castling_to, castling_from\r\n        if (move.flags & BITS.KSIDE_CASTLE) {\r\n          castling_to = move.to + 1\r\n          castling_from = move.to - 1\r\n        } else if (move.flags & BITS.QSIDE_CASTLE) {\r\n          castling_to = move.to - 2\r\n          castling_from = move.to + 1\r\n        }\r\n  \r\n        board[castling_to] = board[castling_from]\r\n        board[castling_from] = null\r\n      }\r\n  \r\n      return move\r\n    }\r\n  \r\n    /* this function is used to uniquely identify ambiguous moves */\r\n    function get_disambiguator(move, sloppy) {\r\n      var moves = generate_moves({ legal: !sloppy })\r\n  \r\n      var from = move.from\r\n      var to = move.to\r\n      var piece = move.piece\r\n  \r\n      var ambiguities = 0\r\n      var same_rank = 0\r\n      var same_file = 0\r\n  \r\n      for (var i = 0, len = moves.length; i < len; i++) {\r\n        var ambig_from = moves[i].from\r\n        var ambig_to = moves[i].to\r\n        var ambig_piece = moves[i].piece\r\n  \r\n        /* if a move of the same piece type ends on the same to square, we'll\r\n         * need to add a disambiguator to the algebraic notation\r\n         */\r\n        if (piece === ambig_piece && from !== ambig_from && to === ambig_to) {\r\n          ambiguities++\r\n  \r\n          if (rank(from) === rank(ambig_from)) {\r\n            same_rank++\r\n          }\r\n  \r\n          if (file(from) === file(ambig_from)) {\r\n            same_file++\r\n          }\r\n        }\r\n      }\r\n  \r\n      if (ambiguities > 0) {\r\n        /* if there exists a similar moving piece on the same rank and file as\r\n         * the move in question, use the square as the disambiguator\r\n         */\r\n        if (same_rank > 0 && same_file > 0) {\r\n          return algebraic(from)\r\n        } else if (same_file > 0) {\r\n          /* if the moving piece rests on the same file, use the rank symbol as the\r\n           * disambiguator\r\n           */\r\n          return algebraic(from).charAt(1)\r\n        } else {\r\n          /* else use the file symbol */\r\n          return algebraic(from).charAt(0)\r\n        }\r\n      }\r\n  \r\n      return ''\r\n    }\r\n  \r\n    function ascii() {\r\n      var s = '   +------------------------+\\n'\r\n      for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\r\n        /* display the rank */\r\n        if (file(i) === 0) {\r\n          s += ' ' + '87654321'[rank(i)] + ' |'\r\n        }\r\n  \r\n        /* empty piece */\r\n        if (board[i] == null) {\r\n          s += ' . '\r\n        } else {\r\n          var piece = board[i].type\r\n          var color = board[i].color\r\n          var symbol = color === WHITE ? piece.toUpperCase() : piece.toLowerCase()\r\n          s += ' ' + symbol + ' '\r\n        }\r\n  \r\n        if ((i + 1) & 0x88) {\r\n          s += '|\\n'\r\n          i += 8\r\n        }\r\n      }\r\n      s += '   +------------------------+\\n'\r\n      s += '     a  b  c  d  e  f  g  h\\n'\r\n  \r\n      return s\r\n    }\r\n  \r\n    // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\r\n    function move_from_san(move, sloppy) {\r\n      // strip off any move decorations: e.g Nf3+?!\r\n      var clean_move = stripped_san(move)\r\n  \r\n      // if we're using the sloppy parser run a regex to grab piece, to, and from\r\n      // this should parse invalid SAN like: Pe2-e4, Rc1c4, Qf3xf7\r\n      if (sloppy) {\r\n        var matches = clean_move.match(\r\n          /([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/\r\n        )\r\n        if (matches) {\r\n          var piece = matches[1]\r\n          var from = matches[2]\r\n          var to = matches[3]\r\n          var promotion = matches[4]\r\n        }\r\n      }\r\n  \r\n      var moves = generate_moves()\r\n      for (var i = 0, len = moves.length; i < len; i++) {\r\n        // try the strict parser first, then the sloppy parser if requested\r\n        // by the user\r\n        if (\r\n          clean_move === stripped_san(move_to_san(moves[i])) ||\r\n          (sloppy && clean_move === stripped_san(move_to_san(moves[i], true)))\r\n        ) {\r\n          return moves[i]\r\n        } else {\r\n          if (\r\n            matches &&\r\n            (!piece || piece.toLowerCase() == moves[i].piece) &&\r\n            SQUARES[from] == moves[i].from &&\r\n            SQUARES[to] == moves[i].to &&\r\n            (!promotion || promotion.toLowerCase() == moves[i].promotion)\r\n          ) {\r\n            return moves[i]\r\n          }\r\n        }\r\n      }\r\n  \r\n      return null\r\n    }\r\n  \r\n    /*****************************************************************************\r\n     * UTILITY FUNCTIONS\r\n     ****************************************************************************/\r\n    function rank(i) {\r\n      return i >> 4\r\n    }\r\n  \r\n    function file(i) {\r\n      return i & 15\r\n    }\r\n  \r\n    function algebraic(i) {\r\n      var f = file(i),\r\n        r = rank(i)\r\n      return 'abcdefgh'.substring(f, f + 1) + '87654321'.substring(r, r + 1)\r\n    }\r\n  \r\n    function swap_color(c) {\r\n      return c === WHITE ? BLACK : WHITE\r\n    }\r\n  \r\n    function is_digit(c) {\r\n      return '0123456789'.indexOf(c) !== -1\r\n    }\r\n  \r\n    /* pretty = external move object */\r\n    function make_pretty(ugly_move) {\r\n      var move = clone(ugly_move)\r\n      move.san = move_to_san(move, false)\r\n      move.to = algebraic(move.to)\r\n      move.from = algebraic(move.from)\r\n  \r\n      var flags = ''\r\n  \r\n      for (var flag in BITS) {\r\n        if (BITS[flag] & move.flags) {\r\n          flags += FLAGS[flag]\r\n        }\r\n      }\r\n      move.flags = flags\r\n  \r\n      return move\r\n    }\r\n  \r\n    function clone(obj) {\r\n      var dupe = obj instanceof Array ? [] : {}\r\n  \r\n      for (var property in obj) {\r\n        if (typeof property === 'object') {\r\n          dupe[property] = clone(obj[property])\r\n        } else {\r\n          dupe[property] = obj[property]\r\n        }\r\n      }\r\n  \r\n      return dupe\r\n    }\r\n  \r\n    function trim(str) {\r\n      return str.replace(/^\\s+|\\s+$/g, '')\r\n    }\r\n  \r\n    /*****************************************************************************\r\n     * DEBUGGING UTILITIES\r\n     ****************************************************************************/\r\n    function perft(depth) {\r\n      var moves = generate_moves({ legal: false })\r\n      var nodes = 0\r\n      var color = turn\r\n  \r\n      for (var i = 0, len = moves.length; i < len; i++) {\r\n        make_move(moves[i])\r\n        if (!king_attacked(color)) {\r\n          if (depth - 1 > 0) {\r\n            var child_nodes = perft(depth - 1)\r\n            nodes += child_nodes\r\n          } else {\r\n            nodes++\r\n          }\r\n        }\r\n        undo_move()\r\n      }\r\n  \r\n      return nodes\r\n    }\r\n  \r\n    return {\r\n      /***************************************************************************\r\n       * PUBLIC CONSTANTS (is there a better way to do this?)\r\n       **************************************************************************/\r\n      WHITE: WHITE,\r\n      BLACK: BLACK,\r\n      PAWN: PAWN,\r\n      KNIGHT: KNIGHT,\r\n      BISHOP: BISHOP,\r\n      ROOK: ROOK,\r\n      QUEEN: QUEEN,\r\n      KING: KING,\r\n      SQUARES: (function() {\r\n        /* from the ECMA-262 spec (section 12.6.4):\r\n         * \"The mechanics of enumerating the properties ... is\r\n         * implementation dependent\"\r\n         * so: for (var sq in SQUARES) { keys.push(sq); } might not be\r\n         * ordered correctly\r\n         */\r\n        var keys = []\r\n        for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\r\n          if (i & 0x88) {\r\n            i += 7\r\n            continue\r\n          }\r\n          keys.push(algebraic(i))\r\n        }\r\n        return keys\r\n      })(),\r\n      FLAGS: FLAGS,\r\n  \r\n      /***************************************************************************\r\n       * PUBLIC API\r\n       **************************************************************************/\r\n      load: function(fen) {\r\n        return load(fen)\r\n      },\r\n  \r\n      reset: function() {\r\n        return reset()\r\n      },\r\n  \r\n      moves: function(options) {\r\n        /* The internal representation of a chess move is in 0x88 format, and\r\n         * not meant to be human-readable.  The code below converts the 0x88\r\n         * square coordinates to algebraic coordinates.  It also prunes an\r\n         * unnecessary move keys resulting from a verbose call.\r\n         */\r\n  \r\n        var ugly_moves = generate_moves(options)\r\n        var moves = []\r\n  \r\n        for (var i = 0, len = ugly_moves.length; i < len; i++) {\r\n          /* does the user want a full move object (most likely not), or just\r\n           * SAN\r\n           */\r\n          if (\r\n            typeof options !== 'undefined' &&\r\n            'verbose' in options &&\r\n            options.verbose\r\n          ) {\r\n            moves.push(make_pretty(ugly_moves[i]))\r\n          } else {\r\n            moves.push(move_to_san(ugly_moves[i], false))\r\n          }\r\n        }\r\n  \r\n        return moves\r\n      },\r\n  \r\n      in_check: function() {\r\n        return in_check()\r\n      },\r\n  \r\n      in_checkmate: function() {\r\n        return in_checkmate()\r\n      },\r\n  \r\n      in_stalemate: function() {\r\n        return in_stalemate()\r\n      },\r\n  \r\n      in_draw: function() {\r\n        return (\r\n          half_moves >= 100 ||\r\n          in_stalemate() ||\r\n          insufficient_material() ||\r\n          in_threefold_repetition()\r\n        )\r\n      },\r\n  \r\n      insufficient_material: function() {\r\n        return insufficient_material()\r\n      },\r\n  \r\n      in_threefold_repetition: function() {\r\n        return in_threefold_repetition()\r\n      },\r\n  \r\n      game_over: function() {\r\n        return (\r\n          half_moves >= 100 ||\r\n          in_checkmate() ||\r\n          in_stalemate() ||\r\n          insufficient_material() ||\r\n          in_threefold_repetition()\r\n        )\r\n      },\r\n  \r\n      validate_fen: function(fen) {\r\n        return validate_fen(fen)\r\n      },\r\n  \r\n      fen: function() {\r\n        return generate_fen()\r\n      },\r\n  \r\n      board: function() {\r\n        var output = [],\r\n          row = []\r\n  \r\n        for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\r\n          if (board[i] == null) {\r\n            row.push(null)\r\n          } else {\r\n            row.push({ type: board[i].type, color: board[i].color })\r\n          }\r\n          if ((i + 1) & 0x88) {\r\n            output.push(row)\r\n            row = []\r\n            i += 8\r\n          }\r\n        }\r\n  \r\n        return output\r\n      },\r\n  \r\n      pgn: function(options) {\r\n        /* using the specification from http://www.chessclub.com/help/PGN-spec\r\n         * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\r\n         */\r\n        var newline =\r\n          typeof options === 'object' && typeof options.newline_char === 'string'\r\n            ? options.newline_char\r\n            : '\\n'\r\n        var max_width =\r\n          typeof options === 'object' && typeof options.max_width === 'number'\r\n            ? options.max_width\r\n            : 0\r\n        var result = []\r\n        var header_exists = false\r\n  \r\n        /* add the PGN header headerrmation */\r\n        for (var i in header) {\r\n          /* TODO: order of enumerated properties in header object is not\r\n           * guaranteed, see ECMA-262 spec (section 12.6.4)\r\n           */\r\n          result.push('[' + i + ' \"' + header[i] + '\"]' + newline)\r\n          header_exists = true\r\n        }\r\n  \r\n        if (header_exists && history.length) {\r\n          result.push(newline)\r\n        }\r\n  \r\n        var append_comment = function(move_string) {\r\n          var comment = comments[generate_fen()]\r\n          if (typeof comment !== 'undefined') {\r\n            var delimiter = move_string.length > 0 ? ' ' : '';\r\n            move_string = `${move_string}${delimiter}{${comment}}`\r\n          }\r\n          return move_string\r\n        }\r\n  \r\n        /* pop all of history onto reversed_history */\r\n        var reversed_history = []\r\n        while (history.length > 0) {\r\n          reversed_history.push(undo_move())\r\n        }\r\n  \r\n        var moves = []\r\n        var move_string = ''\r\n  \r\n        /* special case of a commented starting position with no moves */\r\n        if (reversed_history.length === 0) {\r\n          moves.push(append_comment(''))\r\n        }\r\n  \r\n        /* build the list of moves.  a move_string looks like: \"3. e3 e6\" */\r\n        while (reversed_history.length > 0) {\r\n          move_string = append_comment(move_string)\r\n          var move = reversed_history.pop()\r\n  \r\n          /* if the position started with black to move, start PGN with 1. ... */\r\n          if (!history.length && move.color === 'b') {\r\n            move_string = move_number + '. ...'\r\n          } else if (move.color === 'w') {\r\n            /* store the previous generated move_string if we have one */\r\n            if (move_string.length) {\r\n              moves.push(move_string)\r\n            }\r\n            move_string = move_number + '.'\r\n          }\r\n  \r\n          move_string = move_string + ' ' + move_to_san(move, false)\r\n          make_move(move)\r\n        }\r\n  \r\n        /* are there any other leftover moves? */\r\n        if (move_string.length) {\r\n          moves.push(append_comment(move_string))\r\n        }\r\n  \r\n        /* is there a result? */\r\n        if (typeof header.Result !== 'undefined') {\r\n          moves.push(header.Result)\r\n        }\r\n  \r\n        /* history should be back to what it was before we started generating PGN,\r\n         * so join together moves\r\n         */\r\n        if (max_width === 0) {\r\n          return result.join('') + moves.join(' ')\r\n        }\r\n  \r\n        var strip = function() {\r\n          if (result.length > 0 && result[result.length - 1] === ' ') {\r\n            result.pop();\r\n            return true;\r\n          }\r\n          return false;\r\n        };\r\n  \r\n        /* NB: this does not preserve comment whitespace. */\r\n        var wrap_comment = function(width, move) {\r\n          for (var token of move.split(' ')) {\r\n            if (!token) {\r\n              continue;\r\n            }\r\n            if (width + token.length > max_width) {\r\n              while (strip()) {\r\n                width--;\r\n              }\r\n              result.push(newline);\r\n              width = 0;\r\n            }\r\n            result.push(token);\r\n            width += token.length;\r\n            result.push(' ');\r\n            width++;\r\n          }\r\n          if (strip()) {\r\n            width--;\r\n          }\r\n          return width;\r\n        };\r\n  \r\n        /* wrap the PGN output at max_width */\r\n        var current_width = 0\r\n        for (var i = 0; i < moves.length; i++) {\r\n          if (current_width + moves[i].length > max_width) {\r\n            if (moves[i].includes('{')) {\r\n              current_width = wrap_comment(current_width, moves[i]);\r\n              continue;\r\n            }\r\n          }\r\n          /* if the current move will push past max_width */\r\n          if (current_width + moves[i].length > max_width && i !== 0) {\r\n            /* don't end the line with whitespace */\r\n            if (result[result.length - 1] === ' ') {\r\n              result.pop()\r\n            }\r\n  \r\n            result.push(newline)\r\n            current_width = 0\r\n          } else if (i !== 0) {\r\n            result.push(' ')\r\n            current_width++\r\n          }\r\n          result.push(moves[i])\r\n          current_width += moves[i].length\r\n        }\r\n  \r\n        return result.join('')\r\n      },\r\n  \r\n      load_pgn: function(pgn, options) {\r\n        // allow the user to specify the sloppy move parser to work around over\r\n        // disambiguation bugs in Fritz and Chessbase\r\n        var sloppy =\r\n          typeof options !== 'undefined' && 'sloppy' in options\r\n            ? options.sloppy\r\n            : false\r\n  \r\n        function mask(str) {\r\n          return str.replace(/\\\\/g, '\\\\')\r\n        }\r\n  \r\n        function has_keys(object) {\r\n          for (var key in object) {\r\n            return true\r\n          }\r\n          return false\r\n        }\r\n  \r\n        function parse_pgn_header(header, options) {\r\n          var newline_char =\r\n            typeof options === 'object' &&\r\n            typeof options.newline_char === 'string'\r\n              ? options.newline_char\r\n              : '\\r?\\n'\r\n          var header_obj = {}\r\n          var headers = header.split(new RegExp(mask(newline_char)))\r\n          var key = ''\r\n          var value = ''\r\n  \r\n          for (var i = 0; i < headers.length; i++) {\r\n            key = headers[i].replace(/^\\[([A-Z][A-Za-z]*)\\s.*\\]$/, '$1')\r\n            value = headers[i].replace(/^\\[[A-Za-z]+\\s\"(.*)\"\\ *\\]$/, '$1')\r\n            if (trim(key).length > 0) {\r\n              header_obj[key] = value\r\n            }\r\n          }\r\n  \r\n          return header_obj\r\n        }\r\n  \r\n        var newline_char =\r\n          typeof options === 'object' && typeof options.newline_char === 'string'\r\n            ? options.newline_char\r\n            : '\\r?\\n'\r\n  \r\n        // RegExp to split header. Takes advantage of the fact that header and movetext\r\n        // will always have a blank line between them (ie, two newline_char's).\r\n        // With default newline_char, will equal: /^(\\[((?:\\r?\\n)|.)*\\])(?:\\r?\\n){2}/\r\n        var header_regex = new RegExp(\r\n          '^(\\\\[((?:' +\r\n            mask(newline_char) +\r\n            ')|.)*\\\\])' +\r\n            '(?:' +\r\n            mask(newline_char) +\r\n            '){2}'\r\n        )\r\n  \r\n        // If no header given, begin with moves.\r\n        var header_string = header_regex.test(pgn)\r\n          ? header_regex.exec(pgn)[1]\r\n          : ''\r\n  \r\n        // Put the board in the starting position\r\n        reset()\r\n  \r\n        /* parse PGN header */\r\n        var headers = parse_pgn_header(header_string, options)\r\n        for (var key in headers) {\r\n          set_header([key, headers[key]])\r\n        }\r\n  \r\n        /* load the starting position indicated by [Setup '1'] and\r\n         * [FEN position] */\r\n        if (headers['SetUp'] === '1') {\r\n          if (!('FEN' in headers && load(headers['FEN'], true))) {\r\n            // second argument to load: don't clear the headers\r\n            return false\r\n          }\r\n        }\r\n  \r\n        /* NB: the regexes below that delete move numbers, recursive\r\n         * annotations, and numeric annotation glyphs may also match\r\n         * text in comments. To prevent this, we transform comments\r\n         * by hex-encoding them in place and decoding them again after\r\n         * the other tokens have been deleted.\r\n         *\r\n         * While the spec states that PGN files should be ASCII encoded,\r\n         * we use {en,de}codeURIComponent here to support arbitrary UTF8\r\n         * as a convenience for modern users */\r\n  \r\n        var to_hex = function(string) {\r\n          return Array\r\n            .from(string)\r\n            .map(function(c) {\r\n              /* encodeURI doesn't transform most ASCII characters,\r\n               * so we handle these ourselves */\r\n              return c.charCodeAt(0) < 128\r\n                ? c.charCodeAt(0).toString(16)\r\n                : encodeURIComponent(c).replace(/\\%/g, '').toLowerCase()\r\n            })\r\n            .join('')\r\n        }\r\n  \r\n        var from_hex = function(string) {\r\n          return string.length == 0\r\n            ? ''\r\n            : decodeURIComponent('%' + string.match(/.{1,2}/g).join('%'))\r\n        }\r\n  \r\n        var encode_comment = function(string) {\r\n          string = string.replace(new RegExp(mask(newline_char), 'g'), ' ')\r\n          return `{${to_hex(string.slice(1, string.length - 1))}}`\r\n        }\r\n  \r\n        var decode_comment = function(string) {\r\n          if (string.startsWith('{') && string.endsWith('}')) {\r\n            return from_hex(string.slice(1, string.length - 1))\r\n          }\r\n        }\r\n  \r\n        /* delete header to get the moves */\r\n        var ms = pgn\r\n          .replace(header_string, '')\r\n          .replace(\r\n            /* encode comments so they don't get deleted below */\r\n            new RegExp(`(\\{[^}]*\\})+?|;([^${mask(newline_char)}]*)`, 'g'),\r\n            function(match, bracket, semicolon) {\r\n              return bracket !== undefined\r\n                ? encode_comment(bracket)\r\n                : ' ' + encode_comment(`{${semicolon.slice(1)}}`)\r\n            }\r\n          )\r\n          .replace(new RegExp(mask(newline_char), 'g'), ' ')\r\n  \r\n        /* delete recursive annotation variations */\r\n        var rav_regex = /(\\([^\\(\\)]+\\))+?/g\r\n        while (rav_regex.test(ms)) {\r\n          ms = ms.replace(rav_regex, '')\r\n        }\r\n  \r\n        /* delete move numbers */\r\n        ms = ms.replace(/\\d+\\.(\\.\\.)?/g, '')\r\n  \r\n        /* delete ... indicating black to move */\r\n        ms = ms.replace(/\\.\\.\\./g, '')\r\n  \r\n        /* delete numeric annotation glyphs */\r\n        ms = ms.replace(/\\$\\d+/g, '')\r\n  \r\n        /* trim and get array of moves */\r\n        var moves = trim(ms).split(new RegExp(/\\s+/))\r\n  \r\n        /* delete empty entries */\r\n        moves = moves\r\n          .join(',')\r\n          .replace(/,,+/g, ',')\r\n          .split(',')\r\n        var move = ''\r\n  \r\n        for (var half_move = 0; half_move < moves.length - 1; half_move++) {\r\n          var comment = decode_comment(moves[half_move])\r\n          if (comment !== undefined) {\r\n            comments[generate_fen()] = comment\r\n            continue\r\n          }\r\n          move = move_from_san(moves[half_move], sloppy)\r\n  \r\n          /* move not possible! (don't clear the board to examine to show the\r\n           * latest valid position)\r\n           */\r\n          if (move == null) {\r\n            return false\r\n          } else {\r\n            make_move(move)\r\n          }\r\n        }\r\n  \r\n        comment = decode_comment(moves[moves.length - 1])\r\n        if (comment !== undefined) {\r\n          comments[generate_fen()] = comment\r\n          moves.pop()\r\n        }\r\n  \r\n        /* examine last move */\r\n        move = moves[moves.length - 1]\r\n        if (POSSIBLE_RESULTS.indexOf(move) > -1) {\r\n          if (has_keys(header) && typeof header.Result === 'undefined') {\r\n            set_header(['Result', move])\r\n          }\r\n        } else {\r\n          move = move_from_san(move, sloppy)\r\n          if (move == null) {\r\n            return false\r\n          } else {\r\n            make_move(move)\r\n          }\r\n        }\r\n        return true\r\n      },\r\n  \r\n      header: function() {\r\n        return set_header(arguments)\r\n      },\r\n  \r\n      ascii: function() {\r\n        return ascii()\r\n      },\r\n  \r\n      turn: function() {\r\n        return turn\r\n      },\r\n\r\n      setTurn: function(t) {\r\n          turn = t;\r\n      },\r\n  \r\n      move: function(move, options) {\r\n        /* The move function can be called with in the following parameters:\r\n         *\r\n         * .move('Nxb7')      <- where 'move' is a case-sensitive SAN string\r\n         *\r\n         * .move({ from: 'h7', <- where the 'move' is a move object (additional\r\n         *         to :'h8',      fields are ignored)\r\n         *         promotion: 'q',\r\n         *      })\r\n         */\r\n  \r\n        // allow the user to specify the sloppy move parser to work around over\r\n        // disambiguation bugs in Fritz and Chessbase\r\n        var sloppy =\r\n          typeof options !== 'undefined' && 'sloppy' in options\r\n            ? options.sloppy\r\n            : false\r\n  \r\n        var move_obj = null\r\n  \r\n        if (typeof move === 'string') {\r\n          move_obj = move_from_san(move, sloppy)\r\n        } else if (typeof move === 'object') {\r\n          var moves = generate_moves()\r\n  \r\n          /* convert the pretty move object to an ugly move object */\r\n          for (var i = 0, len = moves.length; i < len; i++) {\r\n            if (\r\n              move.from === algebraic(moves[i].from) &&\r\n              move.to === algebraic(moves[i].to) &&\r\n              (!('promotion' in moves[i]) ||\r\n                move.promotion === moves[i].promotion)\r\n            ) {\r\n              move_obj = moves[i]\r\n              break\r\n            }\r\n          }\r\n        }\r\n  \r\n        /* failed to find move */\r\n        if (!move_obj) {\r\n          return null\r\n        }\r\n  \r\n        /* need to make a copy of move because we can't generate SAN after the\r\n         * move is made\r\n         */\r\n        var pretty_move = make_pretty(move_obj)\r\n  \r\n        make_move(move_obj)\r\n  \r\n        return pretty_move\r\n      },\r\n  \r\n      undo: function() {\r\n        var move = undo_move()\r\n        return move ? make_pretty(move) : null\r\n      },\r\n  \r\n      clear: function() {\r\n        return clear()\r\n      },\r\n  \r\n      put: function(piece, square) {\r\n        return put(piece, square)\r\n      },\r\n  \r\n      get: function(square) {\r\n        return get(square)\r\n      },\r\n  \r\n      remove: function(square) {\r\n        return remove(square)\r\n      },\r\n  \r\n      perft: function(depth) {\r\n        return perft(depth)\r\n      },\r\n  \r\n      square_color: function(square) {\r\n        if (square in SQUARES) {\r\n          var sq_0x88 = SQUARES[square]\r\n          return (rank(sq_0x88) + file(sq_0x88)) % 2 === 0 ? 'light' : 'dark'\r\n        }\r\n  \r\n        return null\r\n      },\r\n  \r\n      history: function(options) {\r\n        var reversed_history = []\r\n        var move_history = []\r\n        var verbose =\r\n          typeof options !== 'undefined' &&\r\n          'verbose' in options &&\r\n          options.verbose\r\n  \r\n        while (history.length > 0) {\r\n          reversed_history.push(undo_move())\r\n        }\r\n  \r\n        while (reversed_history.length > 0) {\r\n          var move = reversed_history.pop()\r\n          if (verbose) {\r\n            move_history.push(make_pretty(move))\r\n          } else {\r\n            move_history.push(move_to_san(move))\r\n          }\r\n          make_move(move)\r\n        }\r\n  \r\n        return move_history\r\n      },\r\n  \r\n      get_comment: function() {\r\n        return comments[generate_fen()];\r\n      },\r\n  \r\n      set_comment: function(comment) {\r\n        comments[generate_fen()] = comment.replace('{', '[').replace('}', ']');\r\n      },\r\n  \r\n      delete_comment: function() {\r\n        var comment = comments[generate_fen()];\r\n        delete comments[generate_fen()];\r\n        return comment;\r\n      },\r\n  \r\n      get_comments: function() {\r\n        prune_comments();\r\n        return Object.keys(comments).map(function(fen) {\r\n          return {fen: fen, comment: comments[fen]};\r\n        });\r\n      },\r\n  \r\n      delete_comments: function() {\r\n        prune_comments();\r\n        return Object.keys(comments)\r\n          .map(function(fen) {\r\n            var comment = comments[fen];\r\n            delete comments[fen];\r\n            return {fen: fen, comment: comment};\r\n          });\r\n      }\r\n    }\r\n  }\r\n  \r\n  /* export Chess object if using node or any other CommonJS compatible\r\n   * environment */\r\n  if (typeof exports !== 'undefined') exports.Chess = Chess\r\n  /* export Chess object for any RequireJS compatible environment */\r\n  if (typeof define !== 'undefined')\r\n    define(function() {\r\n      return Chess\r\n    })","import Chessboard from \"chessboardjs\";\r\nimport { Chess } from \"./chess\";\r\n\r\nconsole.log(`\r\n\r\n|\\___   ___\\\\  \\|\\  \\|\\   __  \\|\\   __  \\|\\   ____\\|\\  \\|\\  \\|\\   __  \\|\\   _ \\  _   \\|\\   __  \\  \r\n\\|___ \\  \\_\\ \\  \\\\\\  \\ \\  \\|\\  \\ \\  \\|\\  \\ \\  \\___|\\ \\  \\\\\\  \\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \r\n     \\ \\  \\ \\ \\  \\\\\\  \\ \\   _  _\\ \\  \\\\\\  \\ \\  \\    \\ \\   __  \\ \\   __  \\ \\  \\\\|__| \\  \\ \\   ____\\\r\n      \\ \\  \\ \\ \\  \\\\\\  \\ \\  \\\\  \\\\ \\  \\\\\\  \\ \\  \\____\\ \\  \\ \\  \\ \\  \\ \\  \\ \\  \\    \\ \\  \\ \\  \\___|\r\n       \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\_______\\ \\_______\\ \\__\\ \\__\\ \\__\\ \\__\\ \\__\\    \\ \\__\\ \\__\\   \r\n        \\|__|  \\|_______|\\|__|\\|__|\\|_______|\\|_______|\\|__|\\|__|\\|__|\\|__|\\|__|     \\|__|\\|__|   \r\n\r\n`);\r\n\r\nconst board = Chessboard(\"board1\", {\r\n  draggable: true,\r\n  position: \"start\",\r\n  onDragStart: onDragStart,\r\n  onDrop: onDrop,\r\n  onSnapEnd: onSnapEnd,\r\n  pieceTheme: '/{piece}.png',\r\n});\r\nboard.flip();\r\nboard.start();\r\nconst game = new Chess();\r\nconst worker = new Worker('./worker.js');\r\nlet isWhite = true;\r\nconst thinking = document.querySelector('.thinking');\r\nconst scorecard = document.querySelector('.scorecard');\r\nconst statusDisplay = document.querySelector('.status');\r\nlet moveNumber = 1;\r\nlet newdiv = document.createElement('div');\r\nnewdiv.id = \"move-1\";\r\nscorecard.append(newdiv);\r\nlet moveString = moveNumber + \". \";\r\ngame.header('White', 'Turochamp', 'Black', 'Player');\r\ndocument.getElementById('download-pgn').addEventListener('click', downloadPGN);\r\n\r\nfunction downloadPGN() {\r\n  var element = document.createElement('a');\r\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(game.pgn()));\r\n  element.setAttribute('download', 'turochamp-game-'+Date.now()+'.pgn');\r\n\r\n  element.style.display = 'none';\r\n  document.body.appendChild(element);\r\n\r\n  element.click();\r\n\r\n  document.body.removeChild(element);\r\n}\r\n\r\nfunction onDragStart(source, piece, position, orientation) {\r\n  if(isWhite) {return false;}\r\n  if (game.game_over()) return false;\r\n\r\n  if (\r\n    (game.turn() === \"w\") ||\r\n    (game.turn() === \"b\" && piece.search(/^w/) !== -1)\r\n  ) {\r\n    return false;\r\n  }\r\n}\r\nfunction onDrop(source, target) {\r\n  // see if the move is legal\r\n  var move = game.move({\r\n    from: source,\r\n    to: target,\r\n    promotion: \"q\", \r\n  });\r\n\r\n  // illegal move\r\n  if (move === null) return \"snapback\";\r\n\r\n  moveString += \" \" + move.san;\r\n  document.getElementById('move-'+moveNumber).innerHTML = moveString;\r\n  moveNumber++;\r\n  moveString = moveNumber + \". \";\r\n  newdiv = document.createElement('div');\r\n  newdiv.id = \"move-\"+moveNumber;\r\n  scorecard.append(newdiv);\r\n  updateStatus(move);\r\n  \r\n}\r\nfunction updateStatus(move) {\r\n  var status = \"\";\r\n\r\n  var moveColor = \"White\";\r\n  if (game.turn() === \"b\") {\r\n    moveColor = \"Black\";\r\n  }\r\n\r\n  if (game.in_checkmate()) {\r\n    status = moveColor + \" is checkmated.\";\r\n  }\r\n\r\n  else if (game.in_draw()) {\r\n    status = \"Game over, drawn position\";\r\n  }\r\n\r\n  else {\r\n    status = moveColor + \" to move\";\r\n    if (game.in_check()) {\r\n      status += \". Check\";\r\n    }\r\n  }\r\n  statusDisplay.innerHTML = status;  \r\n  if(!game.game_over()){ \r\n\r\n    worker.postMessage(game.fen());\r\n    isWhite = true;\r\n    thinking.innerHTML = \" is thinking ...\";\r\n\r\n    worker.onmessage = e =>{\r\n      const nextMove = JSON.parse(e.data);\r\n      if(nextMove != null){\r\n        game.move(nextMove);\r\n        board.position(game.fen());\r\n        moveString += \" \" + nextMove.san;\r\n        document.getElementById('move-'+moveNumber).innerHTML = moveString;\r\n        updateStatus(nextMove);\r\n      }\r\n      isWhite = false;\r\n      thinking.innerHTML = \"\";\r\n    }\r\n  }\r\n}\r\nfunction onSnapEnd () {\r\n    board.position(game.fen())\r\n}\r\n\r\nupdateStatus();\r\n"]}